{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React, { Component } from 'react';\nimport { Dropdown } from 'reactstrap';\nimport PropTypes from 'prop-types';\nvar propTypes = {\n  children: PropTypes.node,\n  direction: PropTypes.string\n};\nvar defaultProps = {\n  direction: 'down'\n};\n\nvar AppHeaderDropdown = function (_Component) {\n  _inherits(AppHeaderDropdown, _Component);\n\n  function AppHeaderDropdown(props) {\n    _classCallCheck(this, AppHeaderDropdown);\n\n    var _this = _possibleConstructorReturn(this, _Component.call(this, props));\n\n    _this.toggle = _this.toggle.bind(_this);\n    _this.state = {\n      dropdownOpen: false\n    };\n    return _this;\n  }\n\n  AppHeaderDropdown.prototype.toggle = function toggle() {\n    this.setState({\n      dropdownOpen: !this.state.dropdownOpen\n    });\n  };\n\n  AppHeaderDropdown.prototype.render = function render() {\n    var _props = this.props,\n        children = _props.children,\n        attributes = _objectWithoutProperties(_props, ['children']);\n\n    return React.createElement(Dropdown, _extends({\n      nav: true,\n      isOpen: this.state.dropdownOpen,\n      toggle: this.toggle\n    }, attributes), children);\n  };\n\n  return AppHeaderDropdown;\n}(Component);\n\nAppHeaderDropdown.propTypes = process.env.NODE_ENV !== \"production\" ? propTypes : {};\nAppHeaderDropdown.defaultProps = defaultProps;\nexport default AppHeaderDropdown;","map":null,"metadata":{},"sourceType":"module"}