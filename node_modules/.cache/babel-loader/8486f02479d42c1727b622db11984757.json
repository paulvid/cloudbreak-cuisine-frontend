{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React, { Component } from 'react';\nimport { Route, Link, matchPath } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nvar routes = void 0;\n\nvar getPaths = function getPaths(pathname) {\n  var paths = ['/'];\n  if (pathname === '/') return paths;\n  pathname.split('/').reduce(function (prev, curr) {\n    var currPath = prev + '/' + curr;\n    paths.push(currPath);\n    return currPath;\n  });\n  return paths;\n};\n\nvar findRouteName = function findRouteName(url) {\n  var aroute = routes.find(function (route) {\n    return matchPath(url, {\n      path: route.path,\n      exact: route.exact\n    });\n  });\n  return aroute && aroute.name ? aroute.name : null;\n};\n\nvar BreadcrumbsItem = function BreadcrumbsItem(_ref) {\n  var match = _ref.match;\n  var routeName = findRouteName(match.url);\n\n  if (routeName) {\n    return match.isExact ? React.createElement(BreadcrumbItem, {\n      active: true\n    }, routeName) : React.createElement(BreadcrumbItem, null, React.createElement(Link, {\n      to: match.url || ''\n    }, routeName));\n  }\n\n  return null;\n};\n\nBreadcrumbsItem.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  match: PropTypes.shape({\n    url: PropTypes.string\n  })\n} : {};\n\nvar Breadcrumbs = function Breadcrumbs(args) {\n  var paths = getPaths(args.location.pathname);\n  var items = paths.map(function (path, i) {\n    return React.createElement(Route, {\n      key: i.toString(),\n      path: path,\n      component: BreadcrumbsItem\n    });\n  });\n  return React.createElement(Breadcrumb, null, items);\n};\n\nvar propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  appRoutes: PropTypes.any,\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string])\n};\nvar defaultProps = {\n  tag: 'div',\n  className: '',\n  appRoutes: [{\n    path: '/',\n    exact: true,\n    name: 'Home',\n    component: null\n  }]\n};\n\nvar AppBreadcrumb = function (_Component) {\n  _inherits(AppBreadcrumb, _Component);\n\n  function AppBreadcrumb(props) {\n    _classCallCheck(this, AppBreadcrumb);\n\n    var _this = _possibleConstructorReturn(this, _Component.call(this, props));\n\n    _this.state = {\n      routes: props.appRoutes\n    };\n    routes = _this.state.routes;\n    return _this;\n  }\n\n  AppBreadcrumb.prototype.render = function render() {\n    var _props = this.props,\n        className = _props.className,\n        Tag = _props.tag,\n        attributes = _objectWithoutProperties(_props, ['className', 'tag']);\n\n    delete attributes.children;\n    delete attributes.appRoutes;\n    var classes = classNames(className);\n    return React.createElement(Tag, {\n      className: classes\n    }, React.createElement(Route, _extends({\n      path: '/:path',\n      component: Breadcrumbs\n    }, attributes)));\n  };\n\n  return AppBreadcrumb;\n}(Component);\n\nAppBreadcrumb.propTypes = process.env.NODE_ENV !== \"production\" ? propTypes : {};\nAppBreadcrumb.defaultProps = defaultProps;\nexport default AppBreadcrumb;","map":null,"metadata":{},"sourceType":"module"}