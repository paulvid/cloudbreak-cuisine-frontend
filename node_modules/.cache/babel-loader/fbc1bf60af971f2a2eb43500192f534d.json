{"ast":null,"code":"import _defineProperty from \"/Users/pvidal/Documents/Playground/hackathon/react-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/pvidal/Documents/Playground/hackathon/react-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/pvidal/Documents/Playground/hackathon/react-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/pvidal/Documents/Playground/hackathon/react-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/pvidal/Documents/Playground/hackathon/react-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/pvidal/Documents/Playground/hackathon/react-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/pvidal/Documents/Playground/hackathon/react-app/frontend/src/views/Generator/ClusterType.js\";\nimport React, { Component } from 'react';\nimport { Card, CardBody, CardHeader, Progress, Row, Col, Button, Form, FormGroup, FormText, FormFeedback, Input, InputGroup, InputGroupAddon, InputGroupText, Label } from 'reactstrap';\nimport { AppSwitch } from '@coreui/react';\nimport { throws } from 'assert';\n\nvar ClusterType =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ClusterType, _Component);\n\n  function ClusterType(props) {\n    var _this;\n\n    _classCallCheck(this, ClusterType);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ClusterType).call(this, props));\n\n    _this.changeVersion = function (e) {\n      var _this$setState;\n\n      var nextDisabledFlag = true;\n\n      if ([e.target.id] == \"hdfVersion\") {\n        if (_this.state.hdfSwitch) {\n          nextDisabledFlag = false;\n        }\n      } else if ([e.target.id] == \"hdpVersion\") {\n        if (_this.state.hdpSwitch) {\n          nextDisabledFlag = false;\n        }\n      } else if ([e.target.id] == \"combinedVersion\") {\n        if (_this.state.combinedSwitch) {\n          nextDisabledFlag = false;\n        }\n      }\n\n      _this.setState((_this$setState = {}, _defineProperty(_this$setState, e.target.id, e.target.value), _defineProperty(_this$setState, \"nextDisabled\", nextDisabledFlag), _this$setState));\n    };\n\n    _this.changeSwitch = function (e) {\n      var eader = '';\n      var border = '';\n      var cluster = '';\n      var nextDisabledFlag = true;\n\n      if (e.target.id == \"HDF\") {\n        if (_this.state.hdfSwitch == false) {\n          border = 'border-success';\n          eader = 'text-white bg-success';\n          cluster = \"HDF\";\n\n          if (_this.state.hdfVersion != '') {\n            nextDisabledFlag = false;\n          }\n        }\n\n        _this.setState({\n          hdpSwitch: false,\n          hdfSwitch: !_this.state.hdfSwitch,\n          combinedSwitch: false,\n          hdpBorder: '',\n          hdfBorder: border,\n          combinedBorder: '',\n          hdpHeader: '',\n          hdfHeader: eader,\n          combinedHeader: '',\n          clusterType: cluster,\n          nextDisabled: nextDisabledFlag\n        });\n      } else if (e.target.id == \"HDP\") {\n        if (_this.state.hdpSwitch == false) {\n          border = 'border-success';\n          eader = 'text-white bg-success';\n          cluster = \"HDP\";\n\n          if (_this.state.hdpVersion != '') {\n            nextDisabledFlag = false;\n          }\n        }\n\n        _this.setState({\n          hdpSwitch: !_this.state.hdpSwitch,\n          hdfSwitch: false,\n          combinedSwitch: false,\n          hdpBorder: border,\n          hdfBorder: '',\n          combinedBorder: '',\n          hdpHeader: eader,\n          hdfHeader: '',\n          combinedHeader: '',\n          clusterType: cluster,\n          nextDisabled: nextDisabledFlag\n        });\n      } else if (e.target.id == \"COMBINED\") {\n        if (_this.state.combinedSwitch == false) {\n          border = 'border-success';\n          eader = 'text-white bg-success';\n          cluster = \"COMBINED\";\n\n          if (_this.state.combinedVersion != '') {\n            nextDisabledFlag = false;\n          }\n        }\n\n        _this.setState({\n          hdpSwitch: false,\n          hdfSwitch: false,\n          combinedSwitch: !_this.state.combinedSwitch,\n          hdpBorder: '',\n          hdfBorder: '',\n          combinedBorder: border,\n          hdpHeader: '',\n          hdfHeader: '',\n          combinedHeader: eader,\n          clusterType: cluster,\n          nextDisabled: nextDisabledFlag\n        });\n      }\n    };\n\n    _this.saveAndContinue = function (e) {\n      if (_this.state.clusterType == \"HDP\") {\n        _this.props.changeClusterVersion(_this.state.hdpVersion);\n      } else if (_this.state.clusterType == \"HDF\") {\n        _this.props.changeClusterVersion(_this.state.hdfVersion);\n      } else if (_this.state.clusterType == \"COMBINED\") {\n        _this.props.changeClusterVersion(_this.state.combinedVersion);\n      }\n\n      _this.props.changeClusterType(_this.state.clusterType);\n\n      e.preventDefault();\n\n      _this.props.nextStep();\n    };\n\n    _this.back = function (e) {\n      e.preventDefault();\n\n      _this.props.prevStep();\n    };\n\n    _this.state = {\n      hdpSwitch: false,\n      hdfSwitch: false,\n      combinedSwitch: false,\n      hdpBorder: '',\n      hdfBorder: '',\n      combinedBorder: '',\n      hdpHeader: '',\n      hdfHeader: '',\n      combinedHeader: '',\n      clusterVersion: '',\n      clusterType: 'HDP',\n      next: false,\n      hdpVersion: '3.0',\n      hdfVersion: '3.1',\n      combinedVersion: 'HDP 3.0 | HDF 3.2',\n      nextDisabled: true\n    };\n    return _this;\n  }\n\n  _createClass(ClusterType, [{\n    key: \"isDisabled\",\n    value: function isDisabled() {\n      // if( (this.state.hdpSwitch && this.state.hdpVersion.trim() != \"\") ||\n      //     (this.state.hdfSwitch && this.state.hdfVersion.trim() != \"\") ||\n      //     (this.state.combinedSwitch && this.state.combinedVersion.trim() != \"\") ){\n      if (this.state.hdpSwitch || this.state.hdfSwitch || this.state.combinedSwitch) {\n        return false;\n      } else {\n        return true;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var values = this.props.values;\n      return React.createElement(\"div\", {\n        className: \"animated fadeIn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, \"Step 1: Choose a cluster type\"))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, \"\\xA0\")), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(Progress, {\n        animated: true,\n        value: \"25\",\n        color: \"dark\",\n        \"text-align\": \"center\",\n        size: \"lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, \"\\xA0\")), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: this.state.hdpBorder,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        className: this.state.hdpHeader,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-header-actions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, React.createElement(AppSwitch, {\n        id: \"HDP\",\n        className: 'mx-1',\n        variant: 'pill',\n        color: 'success',\n        outline: 'alt',\n        checked: this.state.hdpSwitch,\n        onChange: this.changeSwitch.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }))), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        width: \"50%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"../../assets/img/cuisine/hdp_cluster.png\",\n        height: \"200\",\n        width: \"200\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        width: \"50%\",\n        valign: \"top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, \"\\xA0\"), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"hdpVersion\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, \"Version\")), React.createElement(Input, {\n        type: \"select\",\n        name: \"hdpVersion\",\n        id: \"hdpVersion\",\n        onChange: this.changeVersion.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, \"3.0\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, \"3.1\"))))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        colSpan: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, \"Hortonworks Data Platform\"), React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, \"Hortonworks Data Platform (HDP)\"), \" helps enterprises gain insights from structured and unstructured data. It is an open source framework for distributed storage and processing of large, multi-source data sets.\")))))), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: this.state.hdfBorder,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        className: this.state.hdfHeader,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-header-actions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, React.createElement(AppSwitch, {\n        id: \"HDF\",\n        className: 'mx-1',\n        variant: 'pill',\n        outline: 'alt',\n        color: 'success',\n        checked: this.state.hdfSwitch,\n        onChange: this.changeSwitch.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }))), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        width: \"50%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"../../assets/img/cuisine/hdf_cluster.png\",\n        height: \"200\",\n        width: \"200\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        width: \"50%\",\n        valign: \"top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, \"\\xA0\"), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"hdfVersion\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, \"Version\")), React.createElement(Input, {\n        type: \"select\",\n        name: \"hdfVersion\",\n        id: \"hdfVersion\",\n        onChange: this.changeVersion.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, \"3.2\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, \"3.3\"))))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        colSpan: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, \"Hortonworks Data Flow\"), React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, \"Hortonworks DataFlow (HDF)\"), \" is a scalable, real-time streaming analytics platform that ingests, curates and analyzes data for key insights and immediate actionable intelligence.\")))))), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: this.state.combinedBorder,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        className: this.state.combinedHeader,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-header-actions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, React.createElement(AppSwitch, {\n        id: \"COMBINED\",\n        className: 'mx-1',\n        variant: 'pill',\n        color: 'success',\n        outline: 'alt',\n        checked: this.state.combinedSwitch,\n        onChange: this.changeSwitch.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }))), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        width: \"50%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"../../assets/img/cuisine/both_cluster.png\",\n        height: \"200\",\n        width: \"200\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        width: \"50%\",\n        valign: \"top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }, \"\\xA0\"), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"combinedVersion\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, \"Version\")), React.createElement(Input, {\n        type: \"select\",\n        name: \"combinedVersion\",\n        id: \"combinedVersion\",\n        onChange: this.changeVersion.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, \"HDP 3.0 | HDF 3.2\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, \"HDP 3.1 | HDF 3.3\"))))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        colSpan: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }, \"Combined Cluster\"), React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, \"Combined HDP + HDF clusters\"), \" allow you to leverage the best out of Hortonworks platforms. Manage all your services in one central place and build Edge to AI applications.\"))))))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"chart-wrapper\",\n        align: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }, React.createElement(Button, {\n        size: \"lg\",\n        outline: true,\n        color: \"primary\",\n        onClick: this.back,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-long-arrow-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }), \" Back\"))), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"chart-wrapper\",\n        align: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }, React.createElement(Button, {\n        id: this.state.clusterType,\n        size: \"lg\",\n        color: \"primary\",\n        onClick: this.saveAndContinue,\n        disabled: this.state.nextDisabled,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }, \"Next  \", React.createElement(\"i\", {\n        className: \"fa fa-long-arrow-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      }))))));\n    }\n  }]);\n\n  return ClusterType;\n}(Component);\n\nexport default ClusterType;","map":{"version":3,"sources":["/Users/pvidal/Documents/Playground/hackathon/react-app/frontend/src/views/Generator/ClusterType.js"],"names":["React","Component","Card","CardBody","CardHeader","Progress","Row","Col","Button","Form","FormGroup","FormText","FormFeedback","Input","InputGroup","InputGroupAddon","InputGroupText","Label","AppSwitch","throws","ClusterType","props","changeVersion","e","nextDisabledFlag","target","id","state","hdfSwitch","hdpSwitch","combinedSwitch","setState","value","changeSwitch","eader","border","cluster","hdfVersion","hdpBorder","hdfBorder","combinedBorder","hdpHeader","hdfHeader","combinedHeader","clusterType","nextDisabled","hdpVersion","combinedVersion","saveAndContinue","changeClusterVersion","changeClusterType","preventDefault","nextStep","back","prevStep","clusterVersion","next","values","bind"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,UAAzB,EAAqCC,QAArC,EAA+CC,GAA/C,EAAoDC,GAApD,EAAyDC,MAAzD,EAAiEC,IAAjE,EACIC,SADJ,EAEIC,QAFJ,EAGIC,YAHJ,EAIIC,KAJJ,EAKIC,UALJ,EAMIC,eANJ,EAOIC,cAPJ,EAQIC,KARJ,QAQiB,YARjB;AASA,SAASC,SAAT,QAA0B,eAA1B;AACA,SAASC,MAAT,QAAuB,QAAvB;;IAEMC,W;;;;;AACF,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,qFAAMA,KAAN;;AADe,UAsBlBC,aAtBkB,GAsBF,UAACC,CAAD,EAAO;AAAA;;AACpB,UAAIC,gBAAgB,GAAG,IAAvB;;AACA,UAAG,CAACD,CAAC,CAACE,MAAF,CAASC,EAAV,KAAiB,YAApB,EAAiC;AAC7B,YAAG,MAAKC,KAAL,CAAWC,SAAd,EAAwB;AACpBJ,UAAAA,gBAAgB,GAAG,KAAnB;AACH;AACJ,OAJD,MAIO,IAAG,CAACD,CAAC,CAACE,MAAF,CAASC,EAAV,KAAiB,YAApB,EAAiC;AACpC,YAAG,MAAKC,KAAL,CAAWE,SAAd,EAAwB;AACpBL,UAAAA,gBAAgB,GAAG,KAAnB;AACH;AACJ,OAJM,MAIA,IAAG,CAACD,CAAC,CAACE,MAAF,CAASC,EAAV,KAAiB,iBAApB,EAAsC;AACzC,YAAG,MAAKC,KAAL,CAAWG,cAAd,EAA6B;AACzBN,UAAAA,gBAAgB,GAAG,KAAnB;AACH;AACJ;;AACA,YAAKO,QAAL,uDACIR,CAAC,CAACE,MAAF,CAASC,EADb,EACkBH,CAAC,CAACE,MAAF,CAASO,KAD3B,mDAEiBR,gBAFjB;AAKH,KA1CiB;;AAAA,UA2CnBS,YA3CmB,GA2CJ,UAACV,CAAD,EAAO;AAClB,UAAIW,KAAK,GAAG,EAAZ;AACA,UAAIC,MAAM,GAAG,EAAb;AACA,UAAIC,OAAO,GAAE,EAAb;AACA,UAAIZ,gBAAgB,GAAG,IAAvB;;AACA,UAAID,CAAC,CAACE,MAAF,CAASC,EAAT,IAAe,KAAnB,EAA0B;AACtB,YAAI,MAAKC,KAAL,CAAWC,SAAX,IAAwB,KAA5B,EAAmC;AAC/BO,UAAAA,MAAM,GAAG,gBAAT;AACAD,UAAAA,KAAK,GAAG,uBAAR;AACAE,UAAAA,OAAO,GAAG,KAAV;;AACA,cAAG,MAAKT,KAAL,CAAWU,UAAX,IAAyB,EAA5B,EAA+B;AAC3Bb,YAAAA,gBAAgB,GAAG,KAAnB;AACH;AACJ;;AACD,cAAKO,QAAL,CAAc;AACVF,UAAAA,SAAS,EAAE,KADD;AAEVD,UAAAA,SAAS,EAAE,CAAC,MAAKD,KAAL,CAAWC,SAFb;AAGVE,UAAAA,cAAc,EAAE,KAHN;AAIVQ,UAAAA,SAAS,EAAE,EAJD;AAKVC,UAAAA,SAAS,EAAEJ,MALD;AAMVK,UAAAA,cAAc,EAAE,EANN;AAOVC,UAAAA,SAAS,EAAE,EAPD;AAQVC,UAAAA,SAAS,EAAER,KARD;AASVS,UAAAA,cAAc,EAAE,EATN;AAUVC,UAAAA,WAAW,EAAER,OAVH;AAWVS,UAAAA,YAAY,EAAErB;AAXJ,SAAd;AAcH,OAvBD,MAuBO,IAAID,CAAC,CAACE,MAAF,CAASC,EAAT,IAAe,KAAnB,EAA0B;AAC7B,YAAI,MAAKC,KAAL,CAAWE,SAAX,IAAwB,KAA5B,EAAmC;AAC/BM,UAAAA,MAAM,GAAG,gBAAT;AACAD,UAAAA,KAAK,GAAG,uBAAR;AACAE,UAAAA,OAAO,GAAG,KAAV;;AACA,cAAG,MAAKT,KAAL,CAAWmB,UAAX,IAAyB,EAA5B,EAA+B;AAC3BtB,YAAAA,gBAAgB,GAAG,KAAnB;AACH;AACJ;;AACD,cAAKO,QAAL,CAAc;AACVF,UAAAA,SAAS,EAAE,CAAC,MAAKF,KAAL,CAAWE,SADb;AAEVD,UAAAA,SAAS,EAAE,KAFD;AAGVE,UAAAA,cAAc,EAAE,KAHN;AAIVQ,UAAAA,SAAS,EAAEH,MAJD;AAKVI,UAAAA,SAAS,EAAE,EALD;AAMVC,UAAAA,cAAc,EAAE,EANN;AAOVC,UAAAA,SAAS,EAAEP,KAPD;AAQVQ,UAAAA,SAAS,EAAE,EARD;AASVC,UAAAA,cAAc,EAAE,EATN;AAUVC,UAAAA,WAAW,EAAER,OAVH;AAWVS,UAAAA,YAAY,EAAErB;AAXJ,SAAd;AAaH,OAtBM,MAsBA,IAAID,CAAC,CAACE,MAAF,CAASC,EAAT,IAAe,UAAnB,EAA+B;AAClC,YAAI,MAAKC,KAAL,CAAWG,cAAX,IAA6B,KAAjC,EAAwC;AACpCK,UAAAA,MAAM,GAAG,gBAAT;AACAD,UAAAA,KAAK,GAAG,uBAAR;AACAE,UAAAA,OAAO,GAAG,UAAV;;AACA,cAAG,MAAKT,KAAL,CAAWoB,eAAX,IAA8B,EAAjC,EAAoC;AAChCvB,YAAAA,gBAAgB,GAAG,KAAnB;AACH;AACJ;;AACD,cAAKO,QAAL,CAAc;AACVF,UAAAA,SAAS,EAAE,KADD;AAEVD,UAAAA,SAAS,EAAE,KAFD;AAGVE,UAAAA,cAAc,EAAE,CAAC,MAAKH,KAAL,CAAWG,cAHlB;AAIVQ,UAAAA,SAAS,EAAE,EAJD;AAKVC,UAAAA,SAAS,EAAE,EALD;AAMVC,UAAAA,cAAc,EAAEL,MANN;AAOVM,UAAAA,SAAS,EAAE,EAPD;AAQVC,UAAAA,SAAS,EAAE,EARD;AASVC,UAAAA,cAAc,EAAET,KATN;AAUVU,UAAAA,WAAW,EAAER,OAVH;AAWVS,UAAAA,YAAY,EAAErB;AAXJ,SAAd;AAcH;AACJ,KArHkB;;AAAA,UAmInBwB,eAnImB,GAmID,UAACzB,CAAD,EAAO;AACrB,UAAG,MAAKI,KAAL,CAAWiB,WAAX,IAA0B,KAA7B,EAAmC;AAC/B,cAAKvB,KAAL,CAAW4B,oBAAX,CAAgC,MAAKtB,KAAL,CAAWmB,UAA3C;AACH,OAFD,MAEO,IAAG,MAAKnB,KAAL,CAAWiB,WAAX,IAA0B,KAA7B,EAAmC;AACtC,cAAKvB,KAAL,CAAW4B,oBAAX,CAAgC,MAAKtB,KAAL,CAAWU,UAA3C;AACH,OAFM,MAEA,IAAG,MAAKV,KAAL,CAAWiB,WAAX,IAA0B,UAA7B,EAAwC;AAC3C,cAAKvB,KAAL,CAAW4B,oBAAX,CAAgC,MAAKtB,KAAL,CAAWoB,eAA3C;AACH;;AACD,YAAK1B,KAAL,CAAW6B,iBAAX,CAA6B,MAAKvB,KAAL,CAAWiB,WAAxC;;AACArB,MAAAA,CAAC,CAAC4B,cAAF;;AACA,YAAK9B,KAAL,CAAW+B,QAAX;AACH,KA9IkB;;AAAA,UAgJnBC,IAhJmB,GAgJX,UAAC9B,CAAD,EAAO;AACXA,MAAAA,CAAC,CAAC4B,cAAF;;AACA,YAAK9B,KAAL,CAAWiC,QAAX;AACH,KAnJkB;;AAGf,UAAK3B,KAAL,GAAa;AACTE,MAAAA,SAAS,EAAE,KADF;AAETD,MAAAA,SAAS,EAAE,KAFF;AAGTE,MAAAA,cAAc,EAAE,KAHP;AAITQ,MAAAA,SAAS,EAAE,EAJF;AAKTC,MAAAA,SAAS,EAAE,EALF;AAMTC,MAAAA,cAAc,EAAE,EANP;AAOTC,MAAAA,SAAS,EAAE,EAPF;AAQTC,MAAAA,SAAS,EAAE,EARF;AASTC,MAAAA,cAAc,EAAE,EATP;AAUTY,MAAAA,cAAc,EAAE,EAVP;AAWTX,MAAAA,WAAW,EAAE,KAXJ;AAYTY,MAAAA,IAAI,EAAE,KAZG;AAaTV,MAAAA,UAAU,EAAE,KAbH;AAcTT,MAAAA,UAAU,EAAE,KAdH;AAeTU,MAAAA,eAAe,EAAE,mBAfR;AAgBTF,MAAAA,YAAY,EAAE;AAhBL,KAAb;AAHe;AAqBhB;;;;iCAkGU;AACT;AACA;AACA;AACA,UAAK,KAAKlB,KAAL,CAAWE,SAAZ,IACC,KAAKF,KAAL,CAAWC,SADZ,IAEC,KAAKD,KAAL,CAAWG,cAFhB,EAEiC;AAC7B,eAAO,KAAP;AACH,OAJD,MAIO;AACH,eAAO,IAAP;AACH;AACJ;;;6BAmBO;AAAA,UACI2B,MADJ,GACe,KAAKpC,KADpB,CACIoC,MADJ;AAEJ,aACI;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACQ,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACJ,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCADQ,CADI,CADR,EAMJ,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACQ,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADR,CANI,EAWA,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACR,oBAAC,QAAD;AAAU,QAAA,QAAQ,MAAlB;AAAmB,QAAA,KAAK,EAAC,IAAzB;AAA8B,QAAA,KAAK,EAAC,MAApC;AAA2C,sBAAW,QAAtD;AAA+D,QAAA,IAAI,EAAC,IAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADQ,CADJ,CAXA,EAgBJ,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACQ,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADR,CAhBI,EAuBJ,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAE,KAAK9B,KAAL,CAAWW,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,UAAD;AAAY,QAAA,SAAS,EAAE,KAAKX,KAAL,CAAWc,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAW,QAAA,EAAE,EAAC,KAAd;AAAoB,QAAA,SAAS,EAAE,MAA/B;AAAuC,QAAA,OAAO,EAAE,MAAhD;AAAwD,QAAA,KAAK,EAAE,SAA/D;AAA0E,QAAA,OAAO,EAAE,KAAnF;AAA0F,QAAA,OAAO,EAAE,KAAKd,KAAL,CAAWE,SAA9G;AAAyH,QAAA,QAAQ,EAAE,KAAKI,YAAL,CAAkByB,IAAlB,CAAuB,IAAvB,CAAnI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAFJ,CADJ,EAOI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,GAAG,EAAC,0CAAT;AAAoD,QAAA,MAAM,EAAC,KAA3D;AAAiE,QAAA,KAAK,EAAC,KAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,EAII;AAAI,QAAA,KAAK,EAAC,KAAV;AAAgB,QAAA,MAAM,EAAC,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,OAAO,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAA5B,CADJ,EAEI,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,IAAI,EAAC,YAA1B;AAAuC,QAAA,EAAE,EAAC,YAA1C;AAAuD,QAAA,QAAQ,EAAE,KAAKpC,aAAL,CAAmBoC,IAAnB,CAAwB,IAAxB,CAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFJ,CAFJ,CAFJ,CAJJ,CADJ,EAgBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,OAAO,EAAC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAFJ,oLADJ,CAhBJ,CADJ,CAPJ,CADA,CADA,EAoCA,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAE,KAAK/B,KAAL,CAAWY,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,UAAD;AAAY,QAAA,SAAS,EAAE,KAAKZ,KAAL,CAAWe,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAW,QAAA,EAAE,EAAC,KAAd;AAAoB,QAAA,SAAS,EAAE,MAA/B;AAAuC,QAAA,OAAO,EAAE,MAAhD;AAAwD,QAAA,OAAO,EAAE,KAAjE;AAAwE,QAAA,KAAK,EAAE,SAA/E;AAA0F,QAAA,OAAO,EAAE,KAAKf,KAAL,CAAWC,SAA9G;AAAyH,QAAA,QAAQ,EAAE,KAAKK,YAAL,CAAkByB,IAAlB,CAAuB,IAAvB,CAAnI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAFJ,CADJ,EAOI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAK,QAAA,GAAG,EAAC,0CAAT;AAAoD,QAAA,MAAM,EAAC,KAA3D;AAAiE,QAAA,KAAK,EAAC,KAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CADJ,EAII;AAAI,QAAA,KAAK,EAAC,KAAV;AAAgB,QAAA,MAAM,EAAC,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,OAAO,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAA5B,CADJ,EAEI,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,IAAI,EAAC,YAA1B;AAAuC,QAAA,EAAE,EAAC,YAA1C;AAAuD,QAAA,QAAQ,EAAE,KAAKpC,aAAL,CAAmBoC,IAAnB,CAAwB,IAAxB,CAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFJ,CAFJ,CAFJ,CAJJ,CADJ,EAgBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,OAAO,EAAC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAFJ,2JADJ,CAhBJ,CADJ,CAPJ,CADA,CApCA,EAuEA,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAE,KAAK/B,KAAL,CAAWa,cAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,UAAD;AAAY,QAAA,SAAS,EAAE,KAAKb,KAAL,CAAWgB,cAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAW,QAAA,EAAE,EAAC,UAAd;AAAyB,QAAA,SAAS,EAAE,MAApC;AAA4C,QAAA,OAAO,EAAE,MAArD;AAA6D,QAAA,KAAK,EAAE,SAApE;AAA+E,QAAA,OAAO,EAAE,KAAxF;AAA+F,QAAA,OAAO,EAAE,KAAKhB,KAAL,CAAWG,cAAnH;AAAmI,QAAA,QAAQ,EAAE,KAAKG,YAAL,CAAkByB,IAAlB,CAAuB,IAAvB,CAA7I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAFJ,CADJ,EAOI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,GAAG,EAAC,2CAAT;AAAqD,QAAA,MAAM,EAAC,KAA5D;AAAkE,QAAA,KAAK,EAAC,KAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,EAII;AAAI,QAAA,KAAK,EAAC,KAAV;AAAgB,QAAA,MAAM,EAAC,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,OAAO,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAjC,CADJ,EAEI,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,IAAI,EAAC,iBAA1B;AAA4C,QAAA,EAAE,EAAC,iBAA/C;AAAiE,QAAA,QAAQ,EAAE,KAAKpC,aAAL,CAAmBoC,IAAnB,CAAwB,IAAxB,CAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAFJ,CAFJ,CAFJ,CAJJ,CADJ,EAgBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,OAAO,EAAC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAFJ,mJADJ,CAhBJ,CADJ,CAPJ,CADA,CAvEA,CAvBI,EAkIJ,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACQ,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAK,QAAA,SAAS,EAAC,eAAf;AAA+B,QAAA,KAAK,EAAC,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,IAAb;AAAkB,QAAA,OAAO,MAAzB;AAA0B,QAAA,KAAK,EAAC,SAAhC;AAA2C,QAAA,OAAO,EAAE,KAAKL,IAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAG,QAAA,SAAS,EAAC,uBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,UADA,CADA,CADR,EAQQ,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAK,QAAA,SAAS,EAAC,eAAf;AAA+B,QAAA,KAAK,EAAC,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,MAAD;AAAQ,QAAA,EAAE,EAAE,KAAK1B,KAAL,CAAWiB,WAAvB;AAAoC,QAAA,IAAI,EAAC,IAAzC;AAA8C,QAAA,KAAK,EAAC,SAApD;AAA8D,QAAA,OAAO,EAAE,KAAKI,eAA5E;AAA6F,QAAA,QAAQ,EAAE,KAAKrB,KAAL,CAAWkB,YAAlH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACQ;AAAG,QAAA,SAAS,EAAC,wBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADR,CADA,CADA,CARR,CAlII,CADJ;AAqJH;;;;EA7SqB5C,S;;AAgT1B,eAAemB,WAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Card, CardBody, CardHeader, Progress, Row, Col, Button, Form,\n    FormGroup,\n    FormText,\n    FormFeedback,\n    Input,\n    InputGroup,\n    InputGroupAddon,\n    InputGroupText,\n    Label } from 'reactstrap';\nimport { AppSwitch } from '@coreui/react'\nimport { throws } from 'assert';\n\nclass ClusterType extends Component{\n    constructor(props) {\n        super(props);\n    \n        this.state = {\n            hdpSwitch: false,\n            hdfSwitch: false,\n            combinedSwitch: false,\n            hdpBorder: '',\n            hdfBorder: '',\n            combinedBorder: '',\n            hdpHeader: '',\n            hdfHeader: '',\n            combinedHeader: '',\n            clusterVersion: '',\n            clusterType: 'HDP',\n            next: false,\n            hdpVersion: '3.0',\n            hdfVersion: '3.1',\n            combinedVersion: 'HDP 3.0 | HDF 3.2',\n            nextDisabled: true\n        };\n      }\n     changeVersion = (e) => {\n        var nextDisabledFlag = true;\n        if([e.target.id] == \"hdfVersion\"){\n            if(this.state.hdfSwitch){\n                nextDisabledFlag = false;\n            }\n        } else if([e.target.id] == \"hdpVersion\"){\n            if(this.state.hdpSwitch){\n                nextDisabledFlag = false;\n            }\n        } else if([e.target.id] == \"combinedVersion\"){\n            if(this.state.combinedSwitch){\n                nextDisabledFlag = false;\n            }\n        }\n         this.setState({\n            [e.target.id]: e.target.value,\n            nextDisabled: nextDisabledFlag,\n         })\n         \n     }\n    changeSwitch = (e) => {\n        var eader = '';\n        var border = '';\n        var cluster ='';\n        var nextDisabledFlag = true;\n        if (e.target.id == \"HDF\") {\n            if (this.state.hdfSwitch == false) {\n                border = 'border-success';\n                eader = 'text-white bg-success';\n                cluster = \"HDF\";\n                if(this.state.hdfVersion != ''){\n                    nextDisabledFlag = false;\n                }\n            }\n            this.setState({\n                hdpSwitch: false,\n                hdfSwitch: !this.state.hdfSwitch,\n                combinedSwitch: false,\n                hdpBorder: '',\n                hdfBorder: border,\n                combinedBorder: '',\n                hdpHeader: '',\n                hdfHeader: eader,\n                combinedHeader: '',\n                clusterType: cluster,\n                nextDisabled: nextDisabledFlag,\n            })\n\n        } else if (e.target.id == \"HDP\") {\n            if (this.state.hdpSwitch == false) {\n                border = 'border-success';\n                eader = 'text-white bg-success';\n                cluster = \"HDP\";\n                if(this.state.hdpVersion != ''){\n                    nextDisabledFlag = false;\n                }\n            }\n            this.setState({\n                hdpSwitch: !this.state.hdpSwitch,\n                hdfSwitch: false,\n                combinedSwitch: false,\n                hdpBorder: border,\n                hdfBorder: '',\n                combinedBorder: '',\n                hdpHeader: eader,\n                hdfHeader: '',\n                combinedHeader: '',\n                clusterType: cluster,\n                nextDisabled: nextDisabledFlag,\n            })\n        } else if (e.target.id == \"COMBINED\") {\n            if (this.state.combinedSwitch == false) {\n                border = 'border-success';\n                eader = 'text-white bg-success';\n                cluster = \"COMBINED\";\n                if(this.state.combinedVersion != ''){\n                    nextDisabledFlag = false;\n                }\n            }\n            this.setState({\n                hdpSwitch: false,\n                hdfSwitch: false,\n                combinedSwitch: !this.state.combinedSwitch,\n                hdpBorder: '',\n                hdfBorder: '',\n                combinedBorder: border,\n                hdpHeader: '',\n                hdfHeader: '',\n                combinedHeader: eader,\n                clusterType: cluster,\n                nextDisabled: nextDisabledFlag,\n            })\n          \n        }\n    }\n\n    isDisabled() {\n        // if( (this.state.hdpSwitch && this.state.hdpVersion.trim() != \"\") ||\n        //     (this.state.hdfSwitch && this.state.hdfVersion.trim() != \"\") ||\n        //     (this.state.combinedSwitch && this.state.combinedVersion.trim() != \"\") ){\n        if( (this.state.hdpSwitch) ||\n            (this.state.hdfSwitch) ||\n            (this.state.combinedSwitch) ){ \n            return false;\n        } else {\n            return true;\n        }\n    }\n    saveAndContinue = (e) => {\n        if(this.state.clusterType == \"HDP\"){\n            this.props.changeClusterVersion(this.state.hdpVersion);\n        } else if(this.state.clusterType == \"HDF\"){\n            this.props.changeClusterVersion(this.state.hdfVersion);\n        } else if(this.state.clusterType == \"COMBINED\"){\n            this.props.changeClusterVersion(this.state.combinedVersion);\n        }\n        this.props.changeClusterType(this.state.clusterType);\n        e.preventDefault();\n        this.props.nextStep();\n    }\n\n    back  = (e) => {\n        e.preventDefault();\n        this.props.prevStep();\n    }\n\n    render(){\n        const { values } = this.props\n        return(\n            <div className=\"animated fadeIn\">\n                    <Row>\n                <Col>\n        <h1>Step 1: Choose a cluster type</h1>\n        </Col>\n        </Row>\n        <Row>\n                <Col>\n                &nbsp; \n        </Col>\n        </Row>\n            <Row>\n                <Col>\n        <Progress animated value='25' color=\"dark\" text-align=\"center\" size=\"lg\"></Progress>\n        </Col>\n        </Row>\n        <Row>\n                <Col>\n                &nbsp; \n        </Col>\n        </Row>\n        \n\n        <Row>\n        <Col>\n        <Card className={this.state.hdpBorder}>\n            <CardHeader className={this.state.hdpHeader}>\n                \n                <div className=\"card-header-actions\">\n                  <AppSwitch id=\"HDP\" className={'mx-1'} variant={'pill'} color={'success'} outline={'alt'} checked={this.state.hdpSwitch} onChange={this.changeSwitch.bind(this)} />\n                </div>\n            </CardHeader>\n            <CardBody >\n                <table>\n                    <tr>\n                        <td width=\"50%\">\n                            <img src='../../assets/img/cuisine/hdp_cluster.png' height=\"200\" width=\"200\" />\n                        </td>\n                        <td width=\"50%\" valign=\"top\">\n                            <p>&nbsp;</p>\n                            <FormGroup>\n                                <Label htmlFor=\"hdpVersion\"><h4>Version</h4></Label>\n                                <Input type=\"select\" name=\"hdpVersion\" id=\"hdpVersion\" onChange={this.changeVersion.bind(this)}>\n                                    <option>3.0</option>\n                                    <option>3.1</option>\n                                </Input>\n                            </FormGroup>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td colSpan=\"2\">\n                            <h3>Hortonworks Data Platform</h3>\n                            <strong>Hortonworks Data Platform (HDP)</strong> helps enterprises gain insights from structured and unstructured data. It is an open source framework for distributed storage and processing of large, multi-source data sets.\n                        </td>\n                    </tr>\n                </table>\n          </CardBody>\n        </Card>\n        </Col>\n        <Col>\n        <Card className={this.state.hdfBorder}>\n            <CardHeader className={this.state.hdfHeader}>\n                \n                <div className=\"card-header-actions\">\n                  <AppSwitch id=\"HDF\" className={'mx-1'} variant={'pill'} outline={'alt'} color={'success'} checked={this.state.hdfSwitch} onChange={this.changeSwitch.bind(this)}/>\n                </div>\n            </CardHeader>\n            <CardBody >\n                <table>\n                    <tr>\n                        <td width=\"50%\">\n                        <img src='../../assets/img/cuisine/hdf_cluster.png' height=\"200\" width=\"200\"/>\n                        </td>\n                        <td width=\"50%\" valign=\"top\">\n                            <p>&nbsp;</p>\n                            <FormGroup>\n                                <Label htmlFor=\"hdfVersion\"><h4>Version</h4></Label>\n                                <Input type=\"select\" name=\"hdfVersion\" id=\"hdfVersion\" onChange={this.changeVersion.bind(this)}>\n                                    <option>3.2</option>\n                                    <option>3.3</option>\n                                </Input>\n                            </FormGroup>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td colSpan=\"2\">\n                            <h3>Hortonworks Data Flow</h3>\n                            <strong>Hortonworks DataFlow (HDF)</strong> is a scalable, real-time streaming analytics platform that ingests, curates and analyzes data for key insights and immediate actionable intelligence.\n                        </td>\n                    </tr>\n                </table>\n          </CardBody>\n        </Card>\n        </Col>\n        <Col>\n        <Card className={this.state.combinedBorder}>\n            <CardHeader className={this.state.combinedHeader}>\n                \n                <div className=\"card-header-actions\">\n                  <AppSwitch id=\"COMBINED\" className={'mx-1'} variant={'pill'} color={'success'} outline={'alt'} checked={this.state.combinedSwitch} onChange={this.changeSwitch.bind(this)}/>\n                </div>\n            </CardHeader>\n            <CardBody >\n                <table>\n                    <tr>\n                        <td width=\"50%\">\n                            <img src='../../assets/img/cuisine/both_cluster.png' height=\"200\" width=\"200\"/>\n                        </td>\n                        <td width=\"50%\" valign=\"top\">\n                            <p>&nbsp;</p>\n                            <FormGroup>\n                                <Label htmlFor=\"combinedVersion\"><h4>Version</h4></Label>\n                                <Input type=\"select\" name=\"combinedVersion\" id=\"combinedVersion\" onChange={this.changeVersion.bind(this)}>\n                                    <option>HDP 3.0 | HDF 3.2</option>\n                                    <option>HDP 3.1 | HDF 3.3</option>\n                                </Input>\n                            </FormGroup>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td colSpan=\"2\">\n                            <h3>Combined Cluster</h3>\n                            <strong>Combined HDP + HDF clusters</strong> allow you to leverage the best out of Hortonworks platforms. Manage all your services in one central place and build Edge to AI applications.\n                        </td>\n                    </tr>\n                </table>\n          </CardBody>\n        </Card>\n        </Col>\n        </Row>\n        <Row>\n                <Col>\n                <div className=\"chart-wrapper\" align=\"left\">\n                <Button size=\"lg\" outline color=\"primary\"  onClick={this.back}>\n                <i className=\"fa fa-long-arrow-left\"></i> Back  \n                </Button>\n                </div>\n                </Col>\n                <Col>\n                <div className=\"chart-wrapper\" align=\"right\">\n                <Button id={this.state.clusterType} size=\"lg\" color=\"primary\" onClick={this.saveAndContinue} disabled={this.state.nextDisabled}>\n                  Next  <i className=\"fa fa-long-arrow-right\"></i>\n                </Button>\n                </div>\n                </Col>\n            </Row>\n        </div>\n        )\n    }\n}\n\nexport default ClusterType;"]},"metadata":{},"sourceType":"module"}