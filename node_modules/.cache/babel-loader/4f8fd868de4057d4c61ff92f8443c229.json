{"ast":null,"code":"import _defineProperty from \"/Users/pvidal/Documents/Playground/hackathon/react-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/pvidal/Documents/Playground/hackathon/react-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/pvidal/Documents/Playground/hackathon/react-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/pvidal/Documents/Playground/hackathon/react-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/pvidal/Documents/Playground/hackathon/react-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/pvidal/Documents/Playground/hackathon/react-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/pvidal/Documents/Playground/hackathon/react-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/pvidal/Documents/Playground/hackathon/react-app/frontend/src/views/Generator/DataPlaneApplications.js\";\nimport React, { Component } from 'react';\nimport { Card, CardBody, CardHeader, Progress, Row, Col, Button, Form, FormGroup, FormText, FormFeedback, Input, InputGroup, InputGroupAddon, InputGroupText, Label, Table } from 'reactstrap';\nimport { AppSwitch } from '@coreui/react';\nimport { throws } from 'assert';\nimport dataPlaneApplicationsData from './DataPlaneApplicationsData';\n\nvar DataPlaneApplications =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DataPlaneApplications, _Component);\n\n  function DataPlaneApplications(props) {\n    var _this;\n\n    _classCallCheck(this, DataPlaneApplications);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DataPlaneApplications).call(this, props));\n\n    _this.saveAndContinue = function (e) {\n      var _this$props$values = _this.props.values,\n          clusterType = _this$props$values.clusterType,\n          clusterVersion = _this$props$values.clusterVersion,\n          clusterId = _this$props$values.clusterId;\n      var services = []; // Mandatory Services\n\n      var mandatoryServiceList = servicesData.filter(function (service) {\n        return service.cluster_id == clusterId && service.mandatory == 1;\n      });\n      mandatoryServiceList.map(function (service) {\n        services.push(JSON.parse(JSON.stringify({\n          id: service.id,\n          name: service.description,\n          img: service.img\n        })));\n      }); // Selected Services\n\n      var serviceList = servicesData.filter(function (service) {\n        return service.cluster_id == clusterId && service.display == 1;\n      });\n      serviceList.map(function (service) {\n        if (_this.state[service.id]) {\n          services.push(JSON.parse(JSON.stringify({\n            id: service.id,\n            name: service.description,\n            img: service.img\n          })));\n        }\n      });\n\n      _this.props.setServiceList(services);\n\n      e.preventDefault();\n\n      _this.props.nextStep();\n    };\n\n    _this.back = function (e) {\n      e.preventDefault();\n\n      _this.props.prevStep();\n    };\n\n    _this.changeSwitch = function (e) {\n      var applicationId = e.target.id;\n      var isChecked = _this.state[applicationId];\n\n      if (!isChecked) {\n        var _this$setState;\n\n        _this.setState((_this$setState = {}, _defineProperty(_this$setState, applicationId, !_this.state[applicationId]), _defineProperty(_this$setState, \"cardHeaderClass\" + applicationId, 'text-white bg-success'), _defineProperty(_this$setState, \"cardClass\" + applicationId, 'border-success'), _this$setState));\n      } else {\n        var _this$setState2;\n\n        _this.setState((_this$setState2 = {}, _defineProperty(_this$setState2, applicationId, !_this.state[applicationId]), _defineProperty(_this$setState2, \"cardHeaderClass\" + applicationId, 'bg-white'), _defineProperty(_this$setState2, \"cardClass\" + applicationId, ''), _this$setState2));\n      }\n    };\n\n    _this.loading = function () {\n      return React.createElement(\"div\", {\n        className: \"animated fadeIn pt-1 text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Loading...\");\n    };\n\n    _this.changeSwitch = _this.changeSwitch.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      firstLoad: true\n    };\n    return _this;\n  }\n\n  _createClass(DataPlaneApplications, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props$values2 = this.props.values,\n          clusterType = _this$props$values2.clusterType,\n          clusterVersion = _this$props$values2.clusterVersion,\n          clusterId = _this$props$values2.clusterId;\n      var applicationList = dataPlaneApplicationsData.filter(function (application) {\n        return application.id;\n      });\n\n      if (this.state.firstLoad) {\n        serviceList.map(function (service) {\n          var _this2$setState;\n\n          _this2.setState((_this2$setState = {}, _defineProperty(_this2$setState, \"cardClass\" + application.id, ''), _defineProperty(_this2$setState, \"cardHeaderClass\" + application.id, 'bg-white'), _defineProperty(_this2$setState, application.id, false), _this2$setState));\n        });\n        this.setState({\n          firstLoad: false\n        });\n      }\n\n      return React.createElement(\"div\", {\n        className: \"animated fadeIn align-items-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"Step 4: Select Data Plane Services\"))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"\\xA0\")), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(Progress, {\n        animated: true,\n        value: \"80\",\n        color: \"dark\",\n        \"text-align\": \"center\",\n        size: \"lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"\\xA0\")), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, applicationList.map(function (application) {\n        return React.createElement(Col, {\n          md: \"2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }, React.createElement(Card, {\n          className: _this2.state[\"cardClass\" + application.id],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }, React.createElement(CardHeader, {\n          className: _this2.state[\"cardHeaderClass\" + application.id],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, application.description, React.createElement(\"div\", {\n          className: \"card-header-actions\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }, React.createElement(AppSwitch, {\n          id: application.id,\n          className: 'mx-1',\n          variant: 'pill',\n          color: 'success',\n          outline: 'alt',\n          checked: _this2.state[application.id],\n          onChange: _this2.changeSwitch,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }))), React.createElement(CardBody, {\n          className: \"align-items-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          align: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: application.img,\n          height: \"75px\",\n          width: \"75px\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131\n          },\n          __self: this\n        })))));\n      })), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"chart-wrapper\",\n        align: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(Button, {\n        size: \"lg\",\n        outline: true,\n        color: \"primary\",\n        onClick: this.back,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-long-arrow-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }), \" Back\"))), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"chart-wrapper\",\n        align: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(Button, {\n        id: this.state.clusterType,\n        size: \"lg\",\n        color: \"primary\",\n        onClick: this.saveAndContinue,\n        disabled: this.state.nextDisabled,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, \"Next  \", React.createElement(\"i\", {\n        className: \"fa fa-long-arrow-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }))))));\n    }\n  }]);\n\n  return DataPlaneApplications;\n}(Component);\n\nexport default DataPlaneApplications;","map":{"version":3,"sources":["/Users/pvidal/Documents/Playground/hackathon/react-app/frontend/src/views/Generator/DataPlaneApplications.js"],"names":["React","Component","Card","CardBody","CardHeader","Progress","Row","Col","Button","Form","FormGroup","FormText","FormFeedback","Input","InputGroup","InputGroupAddon","InputGroupText","Label","Table","AppSwitch","throws","dataPlaneApplicationsData","DataPlaneApplications","props","saveAndContinue","e","values","clusterType","clusterVersion","clusterId","services","mandatoryServiceList","servicesData","filter","service","cluster_id","mandatory","map","push","JSON","parse","stringify","id","name","description","img","serviceList","display","state","setServiceList","preventDefault","nextStep","back","prevStep","changeSwitch","applicationId","target","isChecked","setState","loading","bind","firstLoad","applicationList","application","nextDisabled"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Card, CardBody, CardHeader, Progress, Row, Col, Button, Form,\n    FormGroup,\n    FormText,\n    FormFeedback,\n    Input,\n    InputGroup,\n    InputGroupAddon,\n    InputGroupText,\n    Label,\n    Table, } from 'reactstrap';\nimport { AppSwitch } from '@coreui/react'\nimport { throws } from 'assert';\n\nimport dataPlaneApplicationsData from './DataPlaneApplicationsData'\n\n\nclass DataPlaneApplications extends Component{\n    constructor(props) {\n        super(props);\n        this.changeSwitch = this.changeSwitch.bind(this);\n\n        this.state = {firstLoad: true}\n\n    }\n    \n\n\n    saveAndContinue = (e) => {\n        const {values: { clusterType, clusterVersion, clusterId }} = this.props;\n     \n        var services= [];\n\n        // Mandatory Services\n        const mandatoryServiceList = servicesData.filter((service) => ((service.cluster_id == clusterId) && (service.mandatory == 1))); \n        mandatoryServiceList.map((service) => {\n            services.push(JSON.parse(JSON.stringify({id: service.id, name: service.description, img: service.img}))); \n        })\n\n        // Selected Services\n        const serviceList = servicesData.filter((service) => ((service.cluster_id == clusterId) && (service.display == 1))); \n        serviceList.map((service) => {\n            if(this.state[service.id]){\n                services.push(JSON.parse(JSON.stringify({id: service.id, name: service.description, img: service.img})));  \n            }\n        })\n\n        this.props.setServiceList(services);\n        e.preventDefault();\n        this.props.nextStep();\n    }\n\n    back  = (e) => {\n        e.preventDefault();\n        this.props.prevStep();\n    }\n\n    changeSwitch = (e) => {\n        const applicationId = e.target.id;\n        const isChecked = this.state[applicationId];\n\n        if(!isChecked){\n            this.setState({\n                [applicationId]: !this.state[applicationId], \n                [\"cardHeaderClass\"+applicationId]: 'text-white bg-success',\n                [\"cardClass\"+applicationId]: 'border-success'\n            }); \n        } else {\n            this.setState({\n                [applicationId]: !this.state[applicationId], \n                [\"cardHeaderClass\"+applicationId]: 'bg-white',\n                [\"cardClass\"+applicationId]: ''\n            }); \n        }\n    }\n    \n    loading = () => <div className=\"animated fadeIn pt-1 text-center\">Loading...</div>\n    \n    render(){\n        const {values: { clusterType, clusterVersion, clusterId }} = this.props;\n     \n        const applicationList = dataPlaneApplicationsData.filter((application) => application.id); \n\n        if(this.state.firstLoad){\n            serviceList.map((service) => {\n                this.setState({\n                    [\"cardClass\"+application.id]: '',\n                    [\"cardHeaderClass\"+application.id]: 'bg-white', \n                    [application.id]: false\n                }) \n            }\n            )\n            this.setState({firstLoad: false})\n        }\n    \n        return(           \n            <div className=\"animated fadeIn align-items-center\">\n                <Row>\n                    <Col>\n                        <h1>Step 4: Select Data Plane Services</h1>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col>\n                        &nbsp; \n                    </Col>\n                </Row>\n                <Row>\n                    <Col>\n                        <Progress animated value='80' color=\"dark\" text-align=\"center\" size=\"lg\"></Progress>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col>\n                        &nbsp; \n                    </Col>\n                </Row>\n                <Row>\n                </Row>\n                <Row>\n                    {applicationList.map((application) => {\n                            return <Col md=\"2\">\n                                        <Card className={this.state[\"cardClass\"+application.id]}>\n                                            <CardHeader className={this.state[\"cardHeaderClass\"+application.id]}>\n                                                {application.description}\n                                                <div className=\"card-header-actions\">\n                                                    <AppSwitch id={application.id} className={'mx-1'} variant={'pill'} color={'success'} outline={'alt'} checked={this.state[application.id]} onChange={this.changeSwitch}/>\n                                                </div>\n                                            </CardHeader>\n                                            <CardBody className=\"align-items-center\">\n                                                <div align=\"center\"><img src={application.img} height=\"75px\" width=\"75px\"/></div> \n                                            </CardBody>\n                                        </Card>\n                                    </Col>\n                        \n                                \n                            }\n                        )\n                    }\n                </Row>\n                <Row>\n                    <Col>\n                        <div className=\"chart-wrapper\" align=\"left\">\n                            <Button size=\"lg\" outline color=\"primary\"  onClick={this.back}>\n                                <i className=\"fa fa-long-arrow-left\"></i> Back  \n                            </Button>\n                        </div>\n                    </Col>\n                    <Col>\n                        <div className=\"chart-wrapper\" align=\"right\">\n                            <Button id={this.state.clusterType} size=\"lg\" color=\"primary\" onClick={this.saveAndContinue} disabled={this.state.nextDisabled}>\n                                Next  <i className=\"fa fa-long-arrow-right\"></i>\n                            </Button>\n                        </div>\n                    </Col>\n                </Row>\n            </div>     \n        )\n    }\n}\n\nexport default DataPlaneApplications;"]},"metadata":{},"sourceType":"module"}