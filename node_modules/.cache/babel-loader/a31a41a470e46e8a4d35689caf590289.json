{"ast":null,"code":"import _classCallCheck from \"/Users/pvidal/Documents/Playground/hackathon/react-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/pvidal/Documents/Playground/hackathon/react-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/pvidal/Documents/Playground/hackathon/react-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/pvidal/Documents/Playground/hackathon/react-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/pvidal/Documents/Playground/hackathon/react-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/pvidal/Documents/Playground/hackathon/react-app/frontend/src/views/Generator/Confirmation.js\";\nimport React, { Component } from 'react';\nimport { Card, CardBody, CardHeader, Progress, Row, Col, Button, Form, FormGroup, Input, InputGroup, InputGroupAddon, InputGroupText } from 'reactstrap';\n\nvar Confirmation =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Confirmation, _Component);\n\n  function Confirmation() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Confirmation);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Confirmation)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.saveAndContinue = function (e) {\n      e.preventDefault();\n\n      _this.props.nextStep();\n    };\n\n    _this.back = function (e) {\n      e.preventDefault();\n\n      _this.props.prevStep();\n    };\n\n    return _this;\n  }\n\n  _createClass(Confirmation, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props$values = this.props.values,\n          clusterType = _this$props$values.clusterType,\n          clusterVersion = _this$props$values.clusterVersion,\n          clusterId = _this$props$values.clusterId,\n          services = _this$props$values.services,\n          recipes = _this$props$values.recipes,\n          dataPlaneApplications = _this$props$values.dataPlaneApplications;\n      var serviceList = services.filter(function (service) {\n        return service.display == 1;\n      });\n      var recipesList = recipes.filter(function (recipe) {\n        return recipe.id;\n      });\n      var applicationList = dataPlaneApplications.filter(function (application) {\n        return application.id;\n      });\n      return React.createElement(\"div\", {\n        className: \"animated fadeIn align-items-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"Step 5: Save Bundle to Library\"))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"\\xA0\")), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(Progress, {\n        animated: true,\n        value: \"100\",\n        color: \"dark\",\n        \"text-align\": \"center\",\n        size: \"lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"\\xA0\")), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"border-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        className: \"text-white bg-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Configuration Summary\")), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        height: \"30px\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        width: \"30%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Cluster Type\")), React.createElement(\"td\", {\n        width: \"70%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, clusterType)), React.createElement(\"tr\", {\n        height: \"30px\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        width: \"30%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Cluster Version\")), React.createElement(\"td\", {\n        width: \"70%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, clusterVersion)), React.createElement(\"tr\", {\n        height: \"40px\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        width: \"30%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Services\")), React.createElement(\"td\", {\n        width: \"70%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, serviceList.map(function (service, index, arr) {\n        return index === arr.length - 1 ? service.name : service.name + \", \";\n      }))), React.createElement(\"tr\", {\n        height: \"40px\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        width: \"30%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Add-Ons\")), React.createElement(\"td\", {\n        width: \"70%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, recipesList.map(function (recipe, index, arr) {\n        return index === arr.length - 1 ? recipe.name + \" (\" + recipe.addon_type + \")\" : recipe.name + \" (\" + recipe.addon_type + \"), \";\n      }))), React.createElement(\"tr\", {\n        height: \"35px\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        width: \"30%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"DataPlane Apps\")), React.createElement(\"td\", {\n        width: \"70%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, dataPlaneApplications.map(function (application, index, arr) {\n        return index === arr.length - 1 ? application.name : application.name + \", \";\n      })))))))), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"border-success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        className: \"text-white bg-success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"Details\")), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(Form, {\n        action: \"\",\n        method: \"post\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(InputGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(InputGroupText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }))), React.createElement(Input, {\n        type: \"text\",\n        id: \"bundleName\",\n        name: \"bundleName\",\n        placeholder: \"Bundle Name\",\n        autoComplete: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(InputGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(InputGroupText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-envelope\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }))), React.createElement(Input, {\n        type: \"textarea\",\n        id: \"bundleDescription\",\n        name: \"bundleDescription\",\n        placeholder: \"Bundle Description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(InputGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(InputGroupText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-asterisk\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }))), React.createElement(Input, {\n        type: \"text\",\n        id: \"clusterImg\",\n        name: \"clusterImg\",\n        placeholder: \"Cluster Image\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      })))))))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"chart-wrapper\",\n        align: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(Button, {\n        size: \"lg\",\n        outline: true,\n        color: \"primary\",\n        onClick: this.back,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-long-arrow-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }), \" Back\"))), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"chart-wrapper\",\n        align: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(Button, {\n        size: \"lg\",\n        color: \"primary\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-save\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }), \" Save to Library\")))));\n    }\n  }]);\n\n  return Confirmation;\n}(Component);\n\nexport default Confirmation;","map":{"version":3,"sources":["/Users/pvidal/Documents/Playground/hackathon/react-app/frontend/src/views/Generator/Confirmation.js"],"names":["React","Component","Card","CardBody","CardHeader","Progress","Row","Col","Button","Form","FormGroup","Input","InputGroup","InputGroupAddon","InputGroupText","Confirmation","saveAndContinue","e","preventDefault","props","nextStep","back","prevStep","values","clusterType","clusterVersion","clusterId","services","recipes","dataPlaneApplications","serviceList","filter","service","display","recipesList","recipe","id","applicationList","application","map","index","arr","length","name","addon_type"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Card, CardBody, CardHeader, Progress, Row, Col, Button,\n\n    Form,\n    FormGroup,\n\n    Input,\n    InputGroup,\n    InputGroupAddon,\n    InputGroupText,\n     } from 'reactstrap';\n\nclass Confirmation extends Component{\n    saveAndContinue = (e) => {\n        e.preventDefault();\n        this.props.nextStep();\n    }\n\n    back  = (e) => {\n        e.preventDefault();\n        this.props.prevStep();\n    }\n\n    render(){\n        const {values: { clusterType, clusterVersion, clusterId, services, recipes, dataPlaneApplications }} = this.props;\n        const serviceList = services.filter((service) => (service.display == 1));\n        const recipesList = recipes.filter((recipe) => recipe.id);\n        const applicationList = dataPlaneApplications.filter((application) => application.id);\n\n        return(\n            <div className=\"animated fadeIn align-items-center\">\n                <Row>\n                    <Col>\n                        <h1>Step 5: Save Bundle to Library</h1>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col>\n                    \n                        &nbsp; \n                    </Col>\n                </Row>\n                <Row>\n                    <Col>\n                        <Progress animated value='100' color=\"dark\" text-align=\"center\" size=\"lg\"></Progress>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col>\n                        &nbsp; \n                    </Col>\n                </Row>\n                <Row>\n                </Row>\n                <Row>\n                <Col>\n                    <Card className=\"border-primary\">\n                        <CardHeader className=\"text-white bg-primary\">\n                            <h2>Configuration Summary</h2>\n                        </CardHeader>\n                        <CardBody>\n                            <table>\n                                <tbody>\n                                    <tr height=\"30px\">\n                                        <td width=\"30%\">\n                                            <strong>Cluster Type</strong>\n                                        </td>\n                                        <td width=\"70%\">\n                                            {clusterType}\n                                        </td>\n                                    </tr>\n                                    <tr height=\"30px\">\n                                        <td width=\"30%\">\n                                            <strong>Cluster Version</strong>\n                                        </td>\n                                        <td width=\"70%\">\n                                            {clusterVersion}\n                                        </td>\n                                    </tr>\n                                    <tr height=\"40px\">\n                                        <td width=\"30%\">\n                                            <strong>Services</strong>\n                                        </td>\n                                        <td width=\"70%\">\n                                        {serviceList.map((service, index, arr) => {\n                                            return index === arr.length - 1 ? service.name : service.name + \", \"\n                                        })}\n                                        </td>\n                                    </tr>\n                                    <tr height=\"40px\">\n                                        <td width=\"30%\">\n                                            <strong>Add-Ons</strong>\n                                        </td>\n                                        <td width=\"70%\">\n                                        {recipesList.map((recipe, index, arr) => {\n                                            return index === arr.length - 1 ? recipe.name + \" (\"+recipe.addon_type+\")\" : recipe.name + \" (\"+recipe.addon_type+\"), \"\n                                            }\n                                        )}\n                                        </td>\n                                    </tr>\n                                    <tr height=\"35px\">\n                                        <td width=\"30%\">\n                                            <strong>DataPlane Apps</strong>\n                                        </td>\n                                        <td width=\"70%\">\n                                        {dataPlaneApplications.map((application, index, arr) => {\n                                            return index === arr.length - 1 ? application.name : application.name + \", \"\n                                        }\n                                        )}\n                                        </td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </CardBody>\n                    </Card>\n                </Col>\n                <Col>\n                <Card className=\"border-success\">\n                        <CardHeader className=\"text-white bg-success\">\n                            <h2>Details</h2>\n                        </CardHeader>\n                        <CardBody>\n                        <Form action=\"\" method=\"post\">\n                  <FormGroup>\n                    <InputGroup>\n                      <InputGroupAddon addonType=\"prepend\">\n                        <InputGroupText><i className=\"fa fa-user\"></i></InputGroupText>\n                      </InputGroupAddon>\n                      <Input type=\"text\" id=\"bundleName\" name=\"bundleName\" placeholder=\"Bundle Name\" autoComplete=\"name\"/>\n                    </InputGroup>\n                  </FormGroup>\n                  <FormGroup>\n                    <InputGroup>\n                      <InputGroupAddon addonType=\"prepend\">\n                        <InputGroupText><i className=\"fa fa-envelope\"></i></InputGroupText>\n                      </InputGroupAddon>\n                      <Input type=\"textarea\" id=\"bundleDescription\" name=\"bundleDescription\" placeholder=\"Bundle Description\"/>\n                    </InputGroup>\n                  </FormGroup>\n                  <FormGroup>\n                    <InputGroup>\n                      <InputGroupAddon addonType=\"prepend\">\n                        <InputGroupText><i className=\"fa fa-asterisk\"></i></InputGroupText>\n                      </InputGroupAddon>\n                      <Input type=\"text\" id=\"clusterImg\" name=\"clusterImg\" placeholder=\"Cluster Image\"/>\n                    </InputGroup>\n                  </FormGroup>\n                </Form>\n                        </CardBody>\n                    </Card>\n              \n\n                </Col>\n                </Row>\n                <Row>\n                    <Col>\n                        <div className=\"chart-wrapper\" align=\"left\">\n                            <Button size=\"lg\" outline color=\"primary\"  onClick={this.back}>\n                                <i className=\"fa fa-long-arrow-left\"></i> Back  \n                            </Button>\n                        </div>\n                    </Col>\n                    <Col>\n                        <div className=\"chart-wrapper\" align=\"right\">\n                            <Button size=\"lg\" color=\"primary\" disabled>\n                            <i className=\"fa fa-save\"></i> Save to Library  \n                            </Button>\n                        </div>\n                    </Col>\n                </Row>\n            </div>\n        )\n    }\n}\n\nexport default Confirmation;"]},"metadata":{},"sourceType":"module"}