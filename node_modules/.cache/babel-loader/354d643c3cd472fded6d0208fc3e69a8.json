{"ast":null,"code":"import _defineProperty from \"/Users/pvidal/Documents/Playground/hackathon/react-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/pvidal/Documents/Playground/hackathon/react-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/pvidal/Documents/Playground/hackathon/react-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/pvidal/Documents/Playground/hackathon/react-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/pvidal/Documents/Playground/hackathon/react-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/pvidal/Documents/Playground/hackathon/react-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/pvidal/Documents/Playground/hackathon/react-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/pvidal/Documents/Playground/hackathon/react-app/frontend/src/views/Generator/Recipes.js\";\nimport React, { Component } from 'react';\nimport { Card, CardBody, CardHeader, Progress, Row, Col, Button, Form, FormGroup, FormText, FormFeedback, Input, InputGroup, InputGroupAddon, InputGroupText, Label, Table } from 'reactstrap';\nimport { AppSwitch } from '@coreui/react';\nimport { throws } from 'assert';\nimport recipesData from './RecipesData';\n\nvar Recipes =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Recipes, _Component);\n\n  function Recipes(props) {\n    var _this;\n\n    _classCallCheck(this, Recipes);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Recipes).call(this, props));\n\n    _this.saveAndContinue = function (e) {\n      var _this$props$values = _this.props.values,\n          clusterType = _this$props$values.clusterType,\n          clusterVersion = _this$props$values.clusterVersion,\n          clusterId = _this$props$values.clusterId;\n      var serviceList = servicesData.filter(function (service) {\n        return service.cluster_id == clusterId && service.display == 1;\n      });\n      var services = '{';\n      serviceList.map(function (service) {\n        if (_this.state[service.id]) {\n          services = services + service.id + \": '\" + service.description + \", \";\n        }\n      });\n      services = services + '}';\n\n      _this.props.setServiceList(services);\n\n      e.preventDefault();\n\n      _this.props.nextStep();\n    };\n\n    _this.back = function (e) {\n      e.preventDefault();\n\n      _this.props.prevStep();\n    };\n\n    _this.toggleCheckbox = function (e) {\n      var serviceId = e.target.id;\n      var isChecked = _this.state[serviceId];\n\n      if (!isChecked) {\n        var _this$setState2;\n\n        // If we are enabling a service, we check for dependencies\n        var currentService = servicesData.filter(function (service) {\n          return service.id == serviceId;\n        });\n        var dependencies = '';\n        currentService.map(function (service) {\n          dependencies = service.dependency;\n        });\n\n        if (dependencies != '') {\n          var _this$setState;\n\n          _this.setState((_this$setState = {}, _defineProperty(_this$setState, dependencies, true), _defineProperty(_this$setState, \"cardHeaderClass\" + dependencies, 'text-white bg-success'), _defineProperty(_this$setState, \"cardClass\" + dependencies, 'border-success'), _this$setState));\n        }\n\n        _this.setState((_this$setState2 = {}, _defineProperty(_this$setState2, serviceId, !_this.state[serviceId]), _defineProperty(_this$setState2, \"cardHeaderClass\" + serviceId, 'text-white bg-success'), _defineProperty(_this$setState2, \"cardClass\" + serviceId, 'border-success'), _this$setState2));\n      } else {\n        var _this$setState3;\n\n        _this.setState((_this$setState3 = {}, _defineProperty(_this$setState3, serviceId, !_this.state[serviceId]), _defineProperty(_this$setState3, \"cardHeaderClass\" + serviceId, 'bg-white'), _defineProperty(_this$setState3, \"cardClass\" + serviceId, ''), _this$setState3));\n      }\n    };\n\n    _this.loading = function () {\n      return React.createElement(\"div\", {\n        className: \"animated fadeIn pt-1 text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Loading...\");\n    };\n\n    _this.toggleCheckbox = _this.toggleCheckbox.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      firstLoad: true\n    };\n    return _this;\n  }\n\n  _createClass(Recipes, [{\n    key: \"render\",\n    value: function render() {\n      var services = this.props.values.services;\n      var selectedServiceList = services.filter(function (service) {\n        return service.id;\n      });\n      return React.createElement(\"div\", {\n        className: \"animated fadeIn align-items-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Step 3: Select Add-Ons\"))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"\\xA0\")), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(Progress, {\n        animated: true,\n        value: \"60\",\n        color: \"dark\",\n        \"text-align\": \"center\",\n        size: \"lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"\\xA0\")), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, selectedServiceList.map(function (service) {\n        var associatedRecipes = recipes.filter(function (recipe) {\n          return recipe.serviceId == service.id;\n        });\n        associatedRecipes.map(function (recipe) {\n          return React.createElement(\"h1\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 119\n            },\n            __self: this\n          }, \"recipe.id\");\n        });\n      })), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"chart-wrapper\",\n        align: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(Button, {\n        size: \"lg\",\n        outline: true,\n        color: \"primary\",\n        onClick: this.back,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-long-arrow-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }), \" Back\"))), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"chart-wrapper\",\n        align: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(Button, {\n        id: this.state.clusterType,\n        size: \"lg\",\n        color: \"primary\",\n        onClick: this.saveAndContinue,\n        disabled: this.state.nextDisabled,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \"Next  \", React.createElement(\"i\", {\n        className: \"fa fa-long-arrow-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }))))));\n    }\n  }]);\n\n  return Recipes;\n}(Component);\n\nexport default Recipes;","map":{"version":3,"sources":["/Users/pvidal/Documents/Playground/hackathon/react-app/frontend/src/views/Generator/Recipes.js"],"names":["React","Component","Card","CardBody","CardHeader","Progress","Row","Col","Button","Form","FormGroup","FormText","FormFeedback","Input","InputGroup","InputGroupAddon","InputGroupText","Label","Table","AppSwitch","throws","recipesData","Recipes","props","saveAndContinue","e","values","clusterType","clusterVersion","clusterId","serviceList","servicesData","filter","service","cluster_id","display","services","map","state","id","description","setServiceList","preventDefault","nextStep","back","prevStep","toggleCheckbox","serviceId","target","isChecked","currentService","dependencies","dependency","setState","loading","bind","firstLoad","selectedServiceList","associatedRecipes","recipes","recipe","nextDisabled"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Card, CardBody, CardHeader, Progress, Row, Col, Button, Form,\n    FormGroup,\n    FormText,\n    FormFeedback,\n    Input,\n    InputGroup,\n    InputGroupAddon,\n    InputGroupText,\n    Label,\n    Table, } from 'reactstrap';\nimport { AppSwitch } from '@coreui/react'\nimport { throws } from 'assert';\n\nimport recipesData from './RecipesData'\n\n\nclass Recipes extends Component{\n    constructor(props) {\n        super(props);\n        this.toggleCheckbox = this.toggleCheckbox.bind(this);\n\n        this.state = {firstLoad: true}\n\n    }\n    \n\n\n    saveAndContinue = (e) => {\n        const {values: { clusterType, clusterVersion, clusterId }} = this.props;\n     \n        const serviceList = servicesData.filter((service) => ((service.cluster_id == clusterId) && (service.display == 1))); \n        var services= '{';\n        serviceList.map((service) => {\n            if(this.state[service.id]){\n                services = services + service.id + \": '\" + service.description + \", \"; \n            }\n        })\n        services = services + '}';\n        this.props.setServiceList(services);\n        e.preventDefault();\n        this.props.nextStep();\n    }\n\n    back  = (e) => {\n        e.preventDefault();\n        this.props.prevStep();\n    }\n\n    toggleCheckbox = (e) => {\n        const serviceId = e.target.id;\n        const isChecked = this.state[serviceId];\n\n        if(!isChecked){\n            // If we are enabling a service, we check for dependencies\n            const currentService = servicesData.filter((service) => (service.id == serviceId)); \n            var dependencies='';\n            currentService.map((service) => {\n                    dependencies=service.dependency;\n                }\n            )\n            if(dependencies != ''){\n                this.setState({\n                    [dependencies]: true, \n                    [\"cardHeaderClass\"+dependencies]: 'text-white bg-success',\n                    [\"cardClass\"+dependencies]: 'border-success'\n                });\n            }\n            this.setState({\n                [serviceId]: !this.state[serviceId], \n                [\"cardHeaderClass\"+serviceId]: 'text-white bg-success',\n                [\"cardClass\"+serviceId]: 'border-success'\n            }); \n        } else {\n            this.setState({\n                [serviceId]: !this.state[serviceId], \n                [\"cardHeaderClass\"+serviceId]: 'bg-white',\n                [\"cardClass\"+serviceId]: ''\n            }); \n        }\n    }\n    \n    loading = () => <div className=\"animated fadeIn pt-1 text-center\">Loading...</div>\n    \n    render(){\n        const {values: { services }} = this.props;\n     \n        const selectedServiceList = services.filter((service) => service.id); \n\n   \n        return(           \n            <div className=\"animated fadeIn align-items-center\">\n                <Row>\n                    <Col>\n                        <h1>Step 3: Select Add-Ons</h1>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col>\n                        &nbsp; \n                    </Col>\n                </Row>\n                <Row>\n                    <Col>\n                        <Progress animated value='60' color=\"dark\" text-align=\"center\" size=\"lg\"></Progress>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col>\n                        &nbsp; \n                    </Col>\n                </Row>\n                <Row>\n                </Row>\n                <Row>\n                    {selectedServiceList.map((service) => {\n                            const associatedRecipes = recipes.filter((recipe) => (recipe.serviceId == service.id))\n                            associatedRecipes.map((recipe) => \n                                 <h1>recipe.id</h1>\n                            )\n                        })\n                    }\n                </Row>\n                <Row>\n                    <Col>\n                        <div className=\"chart-wrapper\" align=\"left\">\n                            <Button size=\"lg\" outline color=\"primary\"  onClick={this.back}>\n                                <i className=\"fa fa-long-arrow-left\"></i> Back  \n                            </Button>\n                        </div>\n                    </Col>\n                    <Col>\n                        <div className=\"chart-wrapper\" align=\"right\">\n                            <Button id={this.state.clusterType} size=\"lg\" color=\"primary\" onClick={this.saveAndContinue} disabled={this.state.nextDisabled}>\n                                Next  <i className=\"fa fa-long-arrow-right\"></i>\n                            </Button>\n                        </div>\n                    </Col>\n                </Row>\n            </div>     \n        )\n    }\n}\n\nexport default Recipes;"]},"metadata":{},"sourceType":"module"}