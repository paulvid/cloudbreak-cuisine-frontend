{"ast":null,"code":"import _defineProperty from \"/Users/pvidal/Documents/Playground/hackathon/react-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/pvidal/Documents/Playground/hackathon/react-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/pvidal/Documents/Playground/hackathon/react-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/pvidal/Documents/Playground/hackathon/react-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/pvidal/Documents/Playground/hackathon/react-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/pvidal/Documents/Playground/hackathon/react-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/pvidal/Documents/Playground/hackathon/react-app/frontend/src/views/Generator/Generator.js\";\nimport React, { Component } from 'react';\nimport Confirmation from './Confirmation';\nimport Success from './Success';\nimport WelcomeScreen from './WelcomeScreen';\nimport ClusterType from './ClusterType';\nimport Services from './Services';\nimport Recipes from './Recipes';\nimport DataPlaneApplications from './DataPlaneApplications';\n\nvar Generator =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Generator, _Component);\n\n  function Generator() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Generator);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Generator)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      step: 1,\n      services: [],\n      recipes: [],\n      dataPlaneApplications: [],\n      hdpSwitch: true,\n      hdfSwitch: false,\n      combinedSwitch: false,\n      hdpBorder: 'border-success',\n      hdfBorder: '',\n      combinedBorder: '',\n      hdpHeader: 'text-white bg-success',\n      hdfHeader: '',\n      combinedHeader: '',\n      clusterVersion: '',\n      clusterType: '',\n      clusterId: ''\n    };\n\n    _this.nextStep = function () {\n      var step = _this.state.step;\n\n      _this.setState({\n        step: step + 1\n      });\n    };\n\n    _this.prevStep = function () {\n      var step = _this.state.step;\n\n      _this.setState({\n        step: step - 1\n      });\n    };\n\n    _this.handleChange = function (input) {\n      return function (event) {\n        _this.setState(_defineProperty({}, input, event.target.value));\n      };\n    };\n\n    _this.changeClusterVersion = function (data) {\n      _this.setState({\n        clusterVersion: data\n      });\n    };\n\n    _this.changeClusterId = function (data) {\n      _this.setState({\n        clusterId: data\n      });\n    };\n\n    _this.setServiceList = function (data) {\n      _this.setState({\n        services: data\n      });\n    };\n\n    _this.setDataPlaneApplicationList = function (data) {\n      _this.setState({\n        dataPlaneServices: data\n      });\n    };\n\n    _this.setRecipeList = function (data) {\n      _this.setState({\n        recipes: data\n      });\n    };\n\n    _this.changeClusterType = function (data) {\n      _this.setState({\n        clusterType: data\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Generator, [{\n    key: \"render\",\n    value: function render() {\n      var step = this.state.step;\n      var _this$state = this.state,\n          clusterVersion = _this$state.clusterVersion,\n          clusterType = _this$state.clusterType,\n          clusterId = _this$state.clusterId,\n          services = _this$state.services,\n          recipes = _this$state.recipes,\n          dataPlaneApplications = _this$state.dataPlaneApplications;\n      var values = {\n        clusterVersion: clusterVersion,\n        clusterType: clusterType,\n        clusterId: clusterId,\n        services: services,\n        recipes: recipes,\n        dataPlaneApplications: dataPlaneApplications\n      };\n\n      switch (step) {\n        case 1:\n          return React.createElement(WelcomeScreen, {\n            nextStep: this.nextStep,\n            handleChange: this.handleChange,\n            values: values,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 78\n            },\n            __self: this\n          });\n\n        case 2:\n          return React.createElement(ClusterType, {\n            nextStep: this.nextStep,\n            prevStep: this.prevStep,\n            changeClusterType: this.changeClusterType,\n            changeClusterVersion: this.changeClusterVersion,\n            changeClusterId: this.changeClusterId,\n            handleChange: this.handleChange,\n            values: values,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 84\n            },\n            __self: this\n          });\n\n        case 3:\n          return React.createElement(Services, {\n            setServiceList: this.setServiceList,\n            nextStep: this.nextStep,\n            prevStep: this.prevStep,\n            values: values,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 94\n            },\n            __self: this\n          });\n\n        case 4:\n          return React.createElement(Recipes, {\n            setRecipeList: this.setRecipeList,\n            nextStep: this.nextStep,\n            prevStep: this.prevStep,\n            values: values,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 102\n            },\n            __self: this\n          });\n\n        case 5:\n          return React.createElement(DataPlaneApplications, {\n            setDataPlaneApplicationList: this.setDataPlaneApplicationList,\n            nextStep: this.nextStep,\n            prevStep: this.prevStep,\n            values: values,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 109\n            },\n            __self: this\n          });\n\n        case 6:\n          return React.createElement(Confirmation, {\n            nextStep: this.nextStep,\n            prevStep: this.prevStep,\n            values: values,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 117\n            },\n            __self: this\n          });\n      }\n    }\n  }]);\n\n  return Generator;\n}(Component);\n\nexport default Generator;","map":{"version":3,"sources":["/Users/pvidal/Documents/Playground/hackathon/react-app/frontend/src/views/Generator/Generator.js"],"names":["React","Component","Confirmation","Success","WelcomeScreen","ClusterType","Services","Recipes","DataPlaneApplications","Generator","state","step","services","recipes","dataPlaneApplications","hdpSwitch","hdfSwitch","combinedSwitch","hdpBorder","hdfBorder","combinedBorder","hdpHeader","hdfHeader","combinedHeader","clusterVersion","clusterType","clusterId","nextStep","setState","prevStep","handleChange","input","event","target","value","changeClusterVersion","data","changeClusterId","setServiceList","setDataPlaneApplicationList","dataPlaneServices","setRecipeList","changeClusterType","values"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Confirmation from './Confirmation';\nimport Success from './Success';\nimport WelcomeScreen from './WelcomeScreen';\nimport ClusterType from './ClusterType';\nimport Services from './Services';\nimport Recipes from './Recipes';\nimport DataPlaneApplications from './DataPlaneApplications';\n\nclass Generator extends Component {\n    state = {\n        step: 1,\n        services: [],\n        recipes: [],\n        dataPlaneApplications: [],\n        hdpSwitch: true,\n        hdfSwitch: false,\n        combinedSwitch: false,\n        hdpBorder: 'border-success',\n        hdfBorder: '',\n        combinedBorder: '',\n        hdpHeader: 'text-white bg-success',\n        hdfHeader: '',\n        combinedHeader: '',\n        clusterVersion: '',\n        clusterType: '',\n        clusterId: ''\n    }\n\n\n\n    nextStep = () => {\n        const { step } = this.state\n        this.setState({\n            step : step + 1\n        })\n    }\n\n    prevStep = () => {\n        const { step } = this.state\n        this.setState({\n            step : step - 1\n        })\n    }\n\n    handleChange = input => event => {\n        this.setState({ [input] : event.target.value })\n    }\n\n    changeClusterVersion = (data) =>  {\n        this.setState({ clusterVersion : data })\n   }\n\n   changeClusterId = (data) =>  {\n    this.setState({ clusterId : data })\n}\n\nsetServiceList = (data) =>  {\n    this.setState({ services : data })\n}\n\nsetDataPlaneApplicationList = (data) =>  {\n    this.setState({ dataPlaneServices : data })\n}\nsetRecipeList = (data) =>  {\n    this.setState({ recipes : data })\n}\n    changeClusterType = (data) =>  {\n         this.setState({ clusterType : data })\n    }\n\n    render(){\n        const {step} = this.state;\n        const { clusterVersion, clusterType, clusterId, services, recipes, dataPlaneApplications } = this.state;\n        const values = { clusterVersion, clusterType, clusterId, services, recipes, dataPlaneApplications };\n        switch(step) {\n        case 1:\n            return <WelcomeScreen \n                    nextStep={this.nextStep} \n                    handleChange = {this.handleChange}\n                    values={values}\n                    />\n        case 2:\n            return <ClusterType \n                    nextStep={this.nextStep}\n                    prevStep={this.prevStep}\n                    changeClusterType = {this.changeClusterType}\n                    changeClusterVersion = {this.changeClusterVersion}\n                    changeClusterId = {this.changeClusterId}\n                    handleChange = {this.handleChange}\n                    values={values}\n                    />\n        case 3:\n            return <Services \n                    setServiceList={this.setServiceList}\n                    nextStep={this.nextStep}\n                    prevStep={this.prevStep}\n                    values={values}\n                    />\n    \n        case 4:\n            return <Recipes \n                    setRecipeList={this.setRecipeList}\n                    nextStep={this.nextStep}\n                    prevStep={this.prevStep}\n                    values={values}\n                    />\n        case 5:\n            return <DataPlaneApplications  \n                    setDataPlaneApplicationList={this.setDataPlaneApplicationList}\n                    nextStep={this.nextStep}\n                    prevStep={this.prevStep}\n                    values={values}\n                    />\n\n        case 6:\n            return <Confirmation  \n                    nextStep={this.nextStep}\n                    prevStep={this.prevStep}\n                    values={values}\n                    />\n        }\n    }\n}\n\n   export default Generator;"]},"metadata":{},"sourceType":"module"}