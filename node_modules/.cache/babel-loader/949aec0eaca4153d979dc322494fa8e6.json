{"ast":null,"code":"import _defineProperty from \"/Users/pvidal/Documents/Playground/hackathon/react-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/pvidal/Documents/Playground/hackathon/react-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/pvidal/Documents/Playground/hackathon/react-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/pvidal/Documents/Playground/hackathon/react-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/pvidal/Documents/Playground/hackathon/react-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/pvidal/Documents/Playground/hackathon/react-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/pvidal/Documents/Playground/hackathon/react-app/frontend/src/views/Generator/ClusterType.js\";\nimport React, { Component } from 'react';\nimport { Card, CardBody, CardHeader, Progress, Row, Col, Button, Form, FormGroup, FormText, FormFeedback, Input, InputGroup, InputGroupAddon, InputGroupText, Label } from 'reactstrap';\nimport { AppSwitch } from '@coreui/react';\nimport { throws } from 'assert';\n\nvar ClusterType =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ClusterType, _Component);\n\n  function ClusterType(props) {\n    var _this;\n\n    _classCallCheck(this, ClusterType);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ClusterType).call(this, props));\n\n    _this.changeVersion = function (e) {\n      _this.setState(_defineProperty({}, e.target.id, e.target.value));\n\n      alert(_this.state.hdfVersion);\n    };\n\n    _this.changeSwitch = function (e) {\n      var eader = '';\n      var border = '';\n      var cluster = '';\n\n      if (e.target.id == \"HDF\") {\n        if (_this.state.hdfSwitch == false) {\n          border = 'border-success';\n          eader = 'text-white bg-success';\n          cluster = \"HDF\";\n        }\n\n        _this.setState({\n          hdpSwitch: false,\n          hdfSwitch: !_this.state.hdfSwitch,\n          combinedSwitch: false,\n          hdpBorder: '',\n          hdfBorder: border,\n          combinedBorder: '',\n          hdpHeader: '',\n          hdfHeader: eader,\n          combinedHeader: '',\n          clusterType: cluster\n        });\n      } else if (e.target.id == \"HDP\") {\n        if (_this.state.hdpSwitch == false) {\n          border = 'border-success';\n          eader = 'text-white bg-success';\n          cluster = \"HDP\";\n        }\n\n        _this.setState({\n          hdpSwitch: !_this.state.hdpSwitch,\n          hdfSwitch: false,\n          combinedSwitch: false,\n          hdpBorder: border,\n          hdfBorder: '',\n          combinedBorder: '',\n          hdpHeader: eader,\n          hdfHeader: '',\n          combinedHeader: '',\n          clusterType: cluster\n        });\n      } else if (e.target.id == \"COMBINED\") {\n        if (_this.state.combinedSwitch == false) {\n          border = 'border-success';\n          eader = 'text-white bg-success';\n          cluster = \"COMBINED\";\n        }\n\n        _this.setState({\n          hdpSwitch: false,\n          hdfSwitch: false,\n          combinedSwitch: !_this.state.combinedSwitch,\n          hdpBorder: '',\n          hdfBorder: '',\n          combinedBorder: border,\n          hdpHeader: '',\n          hdfHeader: '',\n          combinedHeader: eader,\n          clusterType: cluster\n        });\n      }\n    };\n\n    _this.saveAndContinue = function (e) {\n      _this.props.changeClusterType(_this.state.clusterType);\n\n      e.preventDefault();\n\n      _this.props.nextStep();\n    };\n\n    _this.back = function (e) {\n      e.preventDefault();\n\n      _this.props.prevStep();\n    };\n\n    _this.state = {\n      hdpSwitch: true,\n      hdfSwitch: false,\n      combinedSwitch: false,\n      hdpBorder: 'border-success',\n      hdfBorder: '',\n      combinedBorder: '',\n      hdpHeader: 'text-white bg-success',\n      hdfHeader: '',\n      combinedHeader: '',\n      clusterVersion: '',\n      clusterType: 'HDP',\n      next: false,\n      hdpVersion: '',\n      hdfVersion: '',\n      combinedVersion: ''\n    };\n    return _this;\n  }\n\n  _createClass(ClusterType, [{\n    key: \"isDisabled\",\n    value: function isDisabled() {\n      if (this.state.hdpSwitch && this.state.hdpVersion.trim() != \"\" || this.state.hdfSwitch && this.state.hdfVersion.trim() != \"\" || this.state.combinedSwitch && this.state.combinedVersion.trim() != \"\") {\n        return false;\n      } else {\n        return true;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var values = this.props.values;\n      return React.createElement(\"div\", {\n        className: \"animated fadeIn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"Step 1: Choose a cluster type\"))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \"\\xA0\")), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(Progress, {\n        animated: true,\n        value: \"25\",\n        color: \"dark\",\n        \"text-align\": \"center\",\n        size: \"lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, \"\\xA0\")), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: this.state.hdpBorder,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        className: this.state.hdpHeader,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-header-actions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(AppSwitch, {\n        id: \"HDP\",\n        className: 'mx-1',\n        variant: 'pill',\n        color: 'success',\n        outline: 'alt',\n        checked: this.state.hdpSwitch,\n        onChange: this.changeSwitch.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }))), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        width: \"50%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"../../assets/img/cuisine/hdp_cluster.png\",\n        height: \"200\",\n        width: \"200\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        width: \"50%\",\n        valign: \"top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, \"\\xA0\"), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"hdpVersion\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, \"Version\")), React.createElement(Input, {\n        type: \"select\",\n        name: \"hdpVersion\",\n        id: \"hdpVersion\",\n        onChange: this.changeVersion.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        disabled: true,\n        selected: true,\n        value: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, \" -- select an version -- \"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, \"3.0\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, \"3.1\"))))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        colSpan: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, \"Hortonworks Data Platform\"), React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, \"Hortonworks Data Platform (HDP)\"), \" helps enterprises gain insights from structured and unstructured data. It is an open source framework for distributed storage and processing of large, multi-source data sets.\")))))), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: this.state.hdfBorder,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        className: this.state.hdfHeader,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-header-actions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(AppSwitch, {\n        id: \"HDF\",\n        className: 'mx-1',\n        variant: 'pill',\n        outline: 'alt',\n        color: 'success',\n        checked: this.state.hdfSwitch,\n        onChange: this.changeSwitch.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }))), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        width: \"50%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"../../assets/img/cuisine/hdf_cluster.png\",\n        height: \"200\",\n        width: \"200\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        width: \"50%\",\n        valign: \"top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, \"\\xA0\"), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"hdfVersion\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, \"Version\")), React.createElement(Input, {\n        type: \"select\",\n        name: \"hdfVersion\",\n        id: \"hdfVersion\",\n        onChange: this.changeVersion.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        disabled: true,\n        selected: true,\n        value: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, \" -- select an version -- \"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, \"3.2\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, \"3.3\"))))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        colSpan: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, \"Hortonworks Data Flow\"), React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, \"Hortonworks DataFlow (HDF)\"), \" is a scalable, real-time streaming analytics platform that ingests, curates and analyzes data for key insights and immediate actionable intelligence.\")))))), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: this.state.combinedBorder,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        className: this.state.combinedHeader,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-header-actions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, React.createElement(AppSwitch, {\n        id: \"COMBINED\",\n        className: 'mx-1',\n        variant: 'pill',\n        color: 'success',\n        outline: 'alt',\n        checked: this.state.combinedSwitch,\n        onChange: this.changeSwitch.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }))), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        width: \"50%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"../../assets/img/cuisine/both_cluster.png\",\n        height: \"200\",\n        width: \"200\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        width: \"50%\",\n        valign: \"top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, \"\\xA0\"), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"combinedVersion\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, \"Version\")), React.createElement(Input, {\n        type: \"select\",\n        name: \"combinedVersion\",\n        id: \"combinedVersion\",\n        onChange: this.changeVersion.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        disabled: true,\n        selected: true,\n        value: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, \" -- select an version -- \"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, \"HDP 3.0 | HDF 3.2\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, \"HDP 3.1 | HDF 3.3\"))))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        colSpan: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, \"Combined Cluster\"), React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, \"Combined HDP + HDF clusters\"), \" allow you to leverage the best out of Hortonworks platforms. Manage all your services in one central place and build Edge to AI applications.\"))))))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"chart-wrapper\",\n        align: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, React.createElement(Button, {\n        size: \"lg\",\n        outline: true,\n        color: \"primary\",\n        onClick: this.back,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-long-arrow-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }), \" Back\"))), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"chart-wrapper\",\n        align: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }, React.createElement(Button, {\n        id: this.state.clusterType,\n        size: \"lg\",\n        color: \"primary\",\n        onClick: this.saveAndContinue,\n        disabled: this.isDisabled,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, \"Next  \", React.createElement(\"i\", {\n        className: \"fa fa-long-arrow-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }))))));\n    }\n  }]);\n\n  return ClusterType;\n}(Component);\n\nexport default ClusterType;","map":{"version":3,"sources":["/Users/pvidal/Documents/Playground/hackathon/react-app/frontend/src/views/Generator/ClusterType.js"],"names":["React","Component","Card","CardBody","CardHeader","Progress","Row","Col","Button","Form","FormGroup","FormText","FormFeedback","Input","InputGroup","InputGroupAddon","InputGroupText","Label","AppSwitch","throws","ClusterType","props","changeVersion","e","setState","target","id","value","alert","state","hdfVersion","changeSwitch","eader","border","cluster","hdfSwitch","hdpSwitch","combinedSwitch","hdpBorder","hdfBorder","combinedBorder","hdpHeader","hdfHeader","combinedHeader","clusterType","saveAndContinue","changeClusterType","preventDefault","nextStep","back","prevStep","clusterVersion","next","hdpVersion","combinedVersion","trim","values","bind","isDisabled"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,UAAzB,EAAqCC,QAArC,EAA+CC,GAA/C,EAAoDC,GAApD,EAAyDC,MAAzD,EAAiEC,IAAjE,EACIC,SADJ,EAEIC,QAFJ,EAGIC,YAHJ,EAIIC,KAJJ,EAKIC,UALJ,EAMIC,eANJ,EAOIC,cAPJ,EAQIC,KARJ,QAQiB,YARjB;AASA,SAASC,SAAT,QAA0B,eAA1B;AACA,SAASC,MAAT,QAAuB,QAAvB;;IAEMC,W;;;;;AACF,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,qFAAMA,KAAN;;AADe,UAqBlBC,aArBkB,GAqBF,UAACC,CAAD,EAAO;AACnB,YAAKC,QAAL,qBACID,CAAC,CAACE,MAAF,CAASC,EADb,EACkBH,CAAC,CAACE,MAAF,CAASE,KAD3B;;AAGAC,MAAAA,KAAK,CAAC,MAAKC,KAAL,CAAWC,UAAZ,CAAL;AACH,KA1BiB;;AAAA,UA2BnBC,YA3BmB,GA2BJ,UAACR,CAAD,EAAO;AAClB,UAAIS,KAAK,GAAG,EAAZ;AACA,UAAIC,MAAM,GAAG,EAAb;AACA,UAAIC,OAAO,GAAE,EAAb;;AACA,UAAIX,CAAC,CAACE,MAAF,CAASC,EAAT,IAAe,KAAnB,EAA0B;AACtB,YAAI,MAAKG,KAAL,CAAWM,SAAX,IAAwB,KAA5B,EAAmC;AAC/BF,UAAAA,MAAM,GAAG,gBAAT;AACAD,UAAAA,KAAK,GAAG,uBAAR;AACAE,UAAAA,OAAO,GAAG,KAAV;AACH;;AACD,cAAKV,QAAL,CAAc;AACVY,UAAAA,SAAS,EAAE,KADD;AAEVD,UAAAA,SAAS,EAAE,CAAC,MAAKN,KAAL,CAAWM,SAFb;AAGVE,UAAAA,cAAc,EAAE,KAHN;AAIVC,UAAAA,SAAS,EAAE,EAJD;AAKVC,UAAAA,SAAS,EAAEN,MALD;AAMVO,UAAAA,cAAc,EAAE,EANN;AAOVC,UAAAA,SAAS,EAAE,EAPD;AAQVC,UAAAA,SAAS,EAAEV,KARD;AASVW,UAAAA,cAAc,EAAE,EATN;AAUVC,UAAAA,WAAW,EAAEV;AAVH,SAAd;AAYH,OAlBD,MAkBO,IAAIX,CAAC,CAACE,MAAF,CAASC,EAAT,IAAe,KAAnB,EAA0B;AAC7B,YAAI,MAAKG,KAAL,CAAWO,SAAX,IAAwB,KAA5B,EAAmC;AAC/BH,UAAAA,MAAM,GAAG,gBAAT;AACAD,UAAAA,KAAK,GAAG,uBAAR;AACAE,UAAAA,OAAO,GAAG,KAAV;AACH;;AACD,cAAKV,QAAL,CAAc;AACVY,UAAAA,SAAS,EAAE,CAAC,MAAKP,KAAL,CAAWO,SADb;AAEVD,UAAAA,SAAS,EAAE,KAFD;AAGVE,UAAAA,cAAc,EAAE,KAHN;AAIVC,UAAAA,SAAS,EAAEL,MAJD;AAKVM,UAAAA,SAAS,EAAE,EALD;AAMVC,UAAAA,cAAc,EAAE,EANN;AAOVC,UAAAA,SAAS,EAAET,KAPD;AAQVU,UAAAA,SAAS,EAAE,EARD;AASVC,UAAAA,cAAc,EAAE,EATN;AAUVC,UAAAA,WAAW,EAAEV;AAVH,SAAd;AAYH,OAlBM,MAkBA,IAAIX,CAAC,CAACE,MAAF,CAASC,EAAT,IAAe,UAAnB,EAA+B;AAClC,YAAI,MAAKG,KAAL,CAAWQ,cAAX,IAA6B,KAAjC,EAAwC;AACpCJ,UAAAA,MAAM,GAAG,gBAAT;AACAD,UAAAA,KAAK,GAAG,uBAAR;AACAE,UAAAA,OAAO,GAAG,UAAV;AACH;;AACD,cAAKV,QAAL,CAAc;AACVY,UAAAA,SAAS,EAAE,KADD;AAEVD,UAAAA,SAAS,EAAE,KAFD;AAGVE,UAAAA,cAAc,EAAE,CAAC,MAAKR,KAAL,CAAWQ,cAHlB;AAIVC,UAAAA,SAAS,EAAE,EAJD;AAKVC,UAAAA,SAAS,EAAE,EALD;AAMVC,UAAAA,cAAc,EAAEP,MANN;AAOVQ,UAAAA,SAAS,EAAE,EAPD;AAQVC,UAAAA,SAAS,EAAE,EARD;AASVC,UAAAA,cAAc,EAAEX,KATN;AAUVY,UAAAA,WAAW,EAAEV;AAVH,SAAd;AAaH;AACJ,KAvFkB;;AAAA,UAkGnBW,eAlGmB,GAkGD,UAACtB,CAAD,EAAO;AACrB,YAAKF,KAAL,CAAWyB,iBAAX,CAA6B,MAAKjB,KAAL,CAAWe,WAAxC;;AACArB,MAAAA,CAAC,CAACwB,cAAF;;AACA,YAAK1B,KAAL,CAAW2B,QAAX;AACH,KAtGkB;;AAAA,UAwGnBC,IAxGmB,GAwGX,UAAC1B,CAAD,EAAO;AACXA,MAAAA,CAAC,CAACwB,cAAF;;AACA,YAAK1B,KAAL,CAAW6B,QAAX;AACH,KA3GkB;;AAGf,UAAKrB,KAAL,GAAa;AACTO,MAAAA,SAAS,EAAE,IADF;AAETD,MAAAA,SAAS,EAAE,KAFF;AAGTE,MAAAA,cAAc,EAAE,KAHP;AAITC,MAAAA,SAAS,EAAE,gBAJF;AAKTC,MAAAA,SAAS,EAAE,EALF;AAMTC,MAAAA,cAAc,EAAE,EANP;AAOTC,MAAAA,SAAS,EAAE,uBAPF;AAQTC,MAAAA,SAAS,EAAE,EARF;AASTC,MAAAA,cAAc,EAAE,EATP;AAUTQ,MAAAA,cAAc,EAAE,EAVP;AAWTP,MAAAA,WAAW,EAAE,KAXJ;AAYTQ,MAAAA,IAAI,EAAE,KAZG;AAaTC,MAAAA,UAAU,EAAE,EAbH;AAcTvB,MAAAA,UAAU,EAAE,EAdH;AAeTwB,MAAAA,eAAe,EAAE;AAfR,KAAb;AAHe;AAoBhB;;;;iCAqEU;AACT,UAAK,KAAKzB,KAAL,CAAWO,SAAX,IAAwB,KAAKP,KAAL,CAAWwB,UAAX,CAAsBE,IAAtB,MAAgC,EAAzD,IACC,KAAK1B,KAAL,CAAWM,SAAX,IAAwB,KAAKN,KAAL,CAAWC,UAAX,CAAsByB,IAAtB,MAAgC,EADzD,IAEC,KAAK1B,KAAL,CAAWQ,cAAX,IAA6B,KAAKR,KAAL,CAAWyB,eAAX,CAA2BC,IAA3B,MAAqC,EAFvE,EAE4E;AACxE,eAAO,KAAP;AACH,OAJD,MAIO;AACH,eAAO,IAAP;AACH;AACJ;;;6BAYO;AAAA,UACIC,MADJ,GACe,KAAKnC,KADpB,CACImC,MADJ;AAEJ,aACI;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACQ,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACJ,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCADQ,CADI,CADR,EAMJ,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACQ,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADR,CANI,EAWA,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACR,oBAAC,QAAD;AAAU,QAAA,QAAQ,MAAlB;AAAmB,QAAA,KAAK,EAAC,IAAzB;AAA8B,QAAA,KAAK,EAAC,MAApC;AAA2C,sBAAW,QAAtD;AAA+D,QAAA,IAAI,EAAC,IAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADQ,CADJ,CAXA,EAgBJ,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACQ,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADR,CAhBI,EAuBJ,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAE,KAAK3B,KAAL,CAAWS,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,UAAD;AAAY,QAAA,SAAS,EAAE,KAAKT,KAAL,CAAWY,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAW,QAAA,EAAE,EAAC,KAAd;AAAoB,QAAA,SAAS,EAAE,MAA/B;AAAuC,QAAA,OAAO,EAAE,MAAhD;AAAwD,QAAA,KAAK,EAAE,SAA/D;AAA0E,QAAA,OAAO,EAAE,KAAnF;AAA0F,QAAA,OAAO,EAAE,KAAKZ,KAAL,CAAWO,SAA9G;AAAyH,QAAA,QAAQ,EAAE,KAAKL,YAAL,CAAkB0B,IAAlB,CAAuB,IAAvB,CAAnI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAFJ,CADJ,EAOI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,GAAG,EAAC,0CAAT;AAAoD,QAAA,MAAM,EAAC,KAA3D;AAAiE,QAAA,KAAK,EAAC,KAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,EAII;AAAI,QAAA,KAAK,EAAC,KAAV;AAAgB,QAAA,MAAM,EAAC,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,OAAO,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAA5B,CADJ,EAEI,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,IAAI,EAAC,YAA1B;AAAuC,QAAA,EAAE,EAAC,YAA1C;AAAuD,QAAA,QAAQ,EAAE,KAAKnC,aAAL,CAAmBmC,IAAnB,CAAwB,IAAxB,CAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,QAAQ,MAAhB;AAAiB,QAAA,QAAQ,MAAzB;AAA0B,QAAA,KAAK,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHJ,CAFJ,CAFJ,CAJJ,CADJ,EAiBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,OAAO,EAAC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAFJ,oLADJ,CAjBJ,CADJ,CAPJ,CADA,CADA,EAqCA,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAE,KAAK5B,KAAL,CAAWU,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,UAAD;AAAY,QAAA,SAAS,EAAE,KAAKV,KAAL,CAAWa,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAW,QAAA,EAAE,EAAC,KAAd;AAAoB,QAAA,SAAS,EAAE,MAA/B;AAAuC,QAAA,OAAO,EAAE,MAAhD;AAAwD,QAAA,OAAO,EAAE,KAAjE;AAAwE,QAAA,KAAK,EAAE,SAA/E;AAA0F,QAAA,OAAO,EAAE,KAAKb,KAAL,CAAWM,SAA9G;AAAyH,QAAA,QAAQ,EAAE,KAAKJ,YAAL,CAAkB0B,IAAlB,CAAuB,IAAvB,CAAnI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAFJ,CADJ,EAOI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAK,QAAA,GAAG,EAAC,0CAAT;AAAoD,QAAA,MAAM,EAAC,KAA3D;AAAiE,QAAA,KAAK,EAAC,KAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CADJ,EAII;AAAI,QAAA,KAAK,EAAC,KAAV;AAAgB,QAAA,MAAM,EAAC,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,OAAO,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAA5B,CADJ,EAEI,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,IAAI,EAAC,YAA1B;AAAuC,QAAA,EAAE,EAAC,YAA1C;AAAuD,QAAA,QAAQ,EAAE,KAAKnC,aAAL,CAAmBmC,IAAnB,CAAwB,IAAxB,CAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,QAAQ,MAAhB;AAAiB,QAAA,QAAQ,MAAzB;AAA0B,QAAA,KAAK,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHJ,CAFJ,CAFJ,CAJJ,CADJ,EAiBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,OAAO,EAAC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAFJ,2JADJ,CAjBJ,CADJ,CAPJ,CADA,CArCA,EAyEA,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAE,KAAK5B,KAAL,CAAWW,cAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,UAAD;AAAY,QAAA,SAAS,EAAE,KAAKX,KAAL,CAAWc,cAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAW,QAAA,EAAE,EAAC,UAAd;AAAyB,QAAA,SAAS,EAAE,MAApC;AAA4C,QAAA,OAAO,EAAE,MAArD;AAA6D,QAAA,KAAK,EAAE,SAApE;AAA+E,QAAA,OAAO,EAAE,KAAxF;AAA+F,QAAA,OAAO,EAAE,KAAKd,KAAL,CAAWQ,cAAnH;AAAmI,QAAA,QAAQ,EAAE,KAAKN,YAAL,CAAkB0B,IAAlB,CAAuB,IAAvB,CAA7I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAFJ,CADJ,EAOI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,GAAG,EAAC,2CAAT;AAAqD,QAAA,MAAM,EAAC,KAA5D;AAAkE,QAAA,KAAK,EAAC,KAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,EAII;AAAI,QAAA,KAAK,EAAC,KAAV;AAAgB,QAAA,MAAM,EAAC,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,OAAO,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAjC,CADJ,EAEI,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,IAAI,EAAC,iBAA1B;AAA4C,QAAA,EAAE,EAAC,iBAA/C;AAAiE,QAAA,QAAQ,EAAE,KAAKnC,aAAL,CAAmBmC,IAAnB,CAAwB,IAAxB,CAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,QAAQ,MAAhB;AAAiB,QAAA,QAAQ,MAAzB;AAA0B,QAAA,KAAK,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAHJ,CAFJ,CAFJ,CAJJ,CADJ,EAiBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,OAAO,EAAC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAFJ,mJADJ,CAjBJ,CADJ,CAPJ,CADA,CAzEA,CAvBI,EAqIJ,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACQ,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAK,QAAA,SAAS,EAAC,eAAf;AAA+B,QAAA,KAAK,EAAC,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,IAAb;AAAkB,QAAA,OAAO,MAAzB;AAA0B,QAAA,KAAK,EAAC,SAAhC;AAA2C,QAAA,OAAO,EAAE,KAAKR,IAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAG,QAAA,SAAS,EAAC,uBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,UADA,CADA,CADR,EAQQ,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAK,QAAA,SAAS,EAAC,eAAf;AAA+B,QAAA,KAAK,EAAC,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,MAAD;AAAQ,QAAA,EAAE,EAAE,KAAKpB,KAAL,CAAWe,WAAvB;AAAoC,QAAA,IAAI,EAAC,IAAzC;AAA8C,QAAA,KAAK,EAAC,SAApD;AAA8D,QAAA,OAAO,EAAE,KAAKC,eAA5E;AAA6F,QAAA,QAAQ,EAAE,KAAKa,UAA5G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACQ;AAAG,QAAA,SAAS,EAAC,wBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADR,CADA,CADA,CARR,CArII,CADJ;AAwJH;;;;EAxQqBzD,S;;AA2Q1B,eAAemB,WAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Card, CardBody, CardHeader, Progress, Row, Col, Button, Form,\n    FormGroup,\n    FormText,\n    FormFeedback,\n    Input,\n    InputGroup,\n    InputGroupAddon,\n    InputGroupText,\n    Label } from 'reactstrap';\nimport { AppSwitch } from '@coreui/react'\nimport { throws } from 'assert';\n\nclass ClusterType extends Component{\n    constructor(props) {\n        super(props);\n    \n        this.state = {\n            hdpSwitch: true,\n            hdfSwitch: false,\n            combinedSwitch: false,\n            hdpBorder: 'border-success',\n            hdfBorder: '',\n            combinedBorder: '',\n            hdpHeader: 'text-white bg-success',\n            hdfHeader: '',\n            combinedHeader: '',\n            clusterVersion: '',\n            clusterType: 'HDP',\n            next: false,\n            hdpVersion: '',\n            hdfVersion: '',\n            combinedVersion: ''\n        };\n      }\n     changeVersion = (e) => {\n         this.setState({\n            [e.target.id]: e.target.value\n         })\n         alert(this.state.hdfVersion);\n     }\n    changeSwitch = (e) => {\n        var eader = '';\n        var border = '';\n        var cluster ='';\n        if (e.target.id == \"HDF\") {\n            if (this.state.hdfSwitch == false) {\n                border = 'border-success';\n                eader = 'text-white bg-success';\n                cluster = \"HDF\";\n            }\n            this.setState({\n                hdpSwitch: false,\n                hdfSwitch: !this.state.hdfSwitch,\n                combinedSwitch: false,\n                hdpBorder: '',\n                hdfBorder: border,\n                combinedBorder: '',\n                hdpHeader: '',\n                hdfHeader: eader,\n                combinedHeader: '',\n                clusterType: cluster,\n            })\n        } else if (e.target.id == \"HDP\") {\n            if (this.state.hdpSwitch == false) {\n                border = 'border-success';\n                eader = 'text-white bg-success';\n                cluster = \"HDP\";\n            }\n            this.setState({\n                hdpSwitch: !this.state.hdpSwitch,\n                hdfSwitch: false,\n                combinedSwitch: false,\n                hdpBorder: border,\n                hdfBorder: '',\n                combinedBorder: '',\n                hdpHeader: eader,\n                hdfHeader: '',\n                combinedHeader: '',\n                clusterType: cluster,\n            })\n        } else if (e.target.id == \"COMBINED\") {\n            if (this.state.combinedSwitch == false) {\n                border = 'border-success';\n                eader = 'text-white bg-success';\n                cluster = \"COMBINED\";\n            }\n            this.setState({\n                hdpSwitch: false,\n                hdfSwitch: false,\n                combinedSwitch: !this.state.combinedSwitch,\n                hdpBorder: '',\n                hdfBorder: '',\n                combinedBorder: border,\n                hdpHeader: '',\n                hdfHeader: '',\n                combinedHeader: eader,\n                clusterType: cluster,\n            })\n          \n        }\n    }\n\n    isDisabled() {\n        if( (this.state.hdpSwitch && this.state.hdpVersion.trim() != \"\") ||\n            (this.state.hdfSwitch && this.state.hdfVersion.trim() != \"\") ||\n            (this.state.combinedSwitch && this.state.combinedVersion.trim() != \"\") ){\n            return false;\n        } else {\n            return true;\n        }\n    }\n    saveAndContinue = (e) => {\n        this.props.changeClusterType(this.state.clusterType);\n        e.preventDefault();\n        this.props.nextStep();\n    }\n\n    back  = (e) => {\n        e.preventDefault();\n        this.props.prevStep();\n    }\n\n    render(){\n        const { values } = this.props\n        return(\n            <div className=\"animated fadeIn\">\n                    <Row>\n                <Col>\n        <h1>Step 1: Choose a cluster type</h1>\n        </Col>\n        </Row>\n        <Row>\n                <Col>\n                &nbsp; \n        </Col>\n        </Row>\n            <Row>\n                <Col>\n        <Progress animated value='25' color=\"dark\" text-align=\"center\" size=\"lg\"></Progress>\n        </Col>\n        </Row>\n        <Row>\n                <Col>\n                &nbsp; \n        </Col>\n        </Row>\n        \n\n        <Row>\n        <Col>\n        <Card className={this.state.hdpBorder}>\n            <CardHeader className={this.state.hdpHeader}>\n                \n                <div className=\"card-header-actions\">\n                  <AppSwitch id=\"HDP\" className={'mx-1'} variant={'pill'} color={'success'} outline={'alt'} checked={this.state.hdpSwitch} onChange={this.changeSwitch.bind(this)} />\n                </div>\n            </CardHeader>\n            <CardBody >\n                <table>\n                    <tr>\n                        <td width=\"50%\">\n                            <img src='../../assets/img/cuisine/hdp_cluster.png' height=\"200\" width=\"200\" />\n                        </td>\n                        <td width=\"50%\" valign=\"top\">\n                            <p>&nbsp;</p>\n                            <FormGroup>\n                                <Label htmlFor=\"hdpVersion\"><h4>Version</h4></Label>\n                                <Input type=\"select\" name=\"hdpVersion\" id=\"hdpVersion\" onChange={this.changeVersion.bind(this)}>\n                                    <option disabled selected value> -- select an version -- </option>\n                                    <option>3.0</option>\n                                    <option>3.1</option>\n                                </Input>\n                            </FormGroup>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td colSpan=\"2\">\n                            <h3>Hortonworks Data Platform</h3>\n                            <strong>Hortonworks Data Platform (HDP)</strong> helps enterprises gain insights from structured and unstructured data. It is an open source framework for distributed storage and processing of large, multi-source data sets.\n                        </td>\n                    </tr>\n                </table>\n          </CardBody>\n        </Card>\n        </Col>\n        <Col>\n        <Card className={this.state.hdfBorder}>\n            <CardHeader className={this.state.hdfHeader}>\n                \n                <div className=\"card-header-actions\">\n                  <AppSwitch id=\"HDF\" className={'mx-1'} variant={'pill'} outline={'alt'} color={'success'} checked={this.state.hdfSwitch} onChange={this.changeSwitch.bind(this)}/>\n                </div>\n            </CardHeader>\n            <CardBody >\n                <table>\n                    <tr>\n                        <td width=\"50%\">\n                        <img src='../../assets/img/cuisine/hdf_cluster.png' height=\"200\" width=\"200\"/>\n                        </td>\n                        <td width=\"50%\" valign=\"top\">\n                            <p>&nbsp;</p>\n                            <FormGroup>\n                                <Label htmlFor=\"hdfVersion\"><h4>Version</h4></Label>\n                                <Input type=\"select\" name=\"hdfVersion\" id=\"hdfVersion\" onChange={this.changeVersion.bind(this)}>\n                                    <option disabled selected value> -- select an version -- </option>\n                                    <option>3.2</option>\n                                    <option>3.3</option>\n                                </Input>\n                            </FormGroup>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td colSpan=\"2\">\n                            <h3>Hortonworks Data Flow</h3>\n                            <strong>Hortonworks DataFlow (HDF)</strong> is a scalable, real-time streaming analytics platform that ingests, curates and analyzes data for key insights and immediate actionable intelligence.\n                        </td>\n                    </tr>\n                </table>\n          </CardBody>\n        </Card>\n        </Col>\n        <Col>\n        <Card className={this.state.combinedBorder}>\n            <CardHeader className={this.state.combinedHeader}>\n                \n                <div className=\"card-header-actions\">\n                  <AppSwitch id=\"COMBINED\" className={'mx-1'} variant={'pill'} color={'success'} outline={'alt'} checked={this.state.combinedSwitch} onChange={this.changeSwitch.bind(this)}/>\n                </div>\n            </CardHeader>\n            <CardBody >\n                <table>\n                    <tr>\n                        <td width=\"50%\">\n                            <img src='../../assets/img/cuisine/both_cluster.png' height=\"200\" width=\"200\"/>\n                        </td>\n                        <td width=\"50%\" valign=\"top\">\n                            <p>&nbsp;</p>\n                            <FormGroup>\n                                <Label htmlFor=\"combinedVersion\"><h4>Version</h4></Label>\n                                <Input type=\"select\" name=\"combinedVersion\" id=\"combinedVersion\" onChange={this.changeVersion.bind(this)}>\n                                    <option disabled selected value> -- select an version -- </option>\n                                    <option>HDP 3.0 | HDF 3.2</option>\n                                    <option>HDP 3.1 | HDF 3.3</option>\n                                </Input>\n                            </FormGroup>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td colSpan=\"2\">\n                            <h3>Combined Cluster</h3>\n                            <strong>Combined HDP + HDF clusters</strong> allow you to leverage the best out of Hortonworks platforms. Manage all your services in one central place and build Edge to AI applications.\n                        </td>\n                    </tr>\n                </table>\n          </CardBody>\n        </Card>\n        </Col>\n        </Row>\n        <Row>\n                <Col>\n                <div className=\"chart-wrapper\" align=\"left\">\n                <Button size=\"lg\" outline color=\"primary\"  onClick={this.back}>\n                <i className=\"fa fa-long-arrow-left\"></i> Back  \n                </Button>\n                </div>\n                </Col>\n                <Col>\n                <div className=\"chart-wrapper\" align=\"right\">\n                <Button id={this.state.clusterType} size=\"lg\" color=\"primary\" onClick={this.saveAndContinue} disabled={this.isDisabled}>\n                  Next  <i className=\"fa fa-long-arrow-right\"></i>\n                </Button>\n                </div>\n                </Col>\n            </Row>\n        </div>\n        )\n    }\n}\n\nexport default ClusterType;"]},"metadata":{},"sourceType":"module"}