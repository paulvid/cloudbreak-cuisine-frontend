{"ast":null,"code":"import _classCallCheck from \"/Users/pvidal/Documents/Playground/hackathon/react-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/pvidal/Documents/Playground/hackathon/react-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/pvidal/Documents/Playground/hackathon/react-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/pvidal/Documents/Playground/hackathon/react-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/pvidal/Documents/Playground/hackathon/react-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/pvidal/Documents/Playground/hackathon/react-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/pvidal/Documents/Playground/hackathon/react-app/frontend/src/views/Dashboard/Dashboard.js\";\nimport React, { Component, lazy, Suspense } from 'react';\nimport { Bar, Line } from 'react-chartjs-2';\nimport { Badge, Button, ButtonDropdown, ButtonGroup, ButtonToolbar, Card, CardBody, CardFooter, CardHeader, CardTitle, Col, Dropdown, DropdownItem, DropdownMenu, DropdownToggle, Progress, Row, Table } from 'reactstrap';\nimport dashboardData from './DashboardData'; // Brand Card Chart\n\nfunction DashbordClassName(dashboardItem) {\n  var state = dashboardItem.state;\n  var class_name = \"text-white bg-primary border-primary\";\n\n  if (state.toString() == \"creating\") {\n    class_name = \"text-white bg-primary border-primary\";\n  } else if (state.toString() == \"created\") {\n    class_name = \"text-white bg-success border-success\";\n  } else if (state.toString() == \"failed\") {\n    class_name = \"text-white bg-danger border-danger\";\n  }\n\n  return {\n    class_name: class_name\n  };\n}\n\nfunction DashboardItemOverview(props) {\n  var dashboardItem = props.dashboardItem;\n  var clusterName = dashboardItem.cluster_name;\n  var state = dashboardItem.state;\n  var widget_text = \"No creation info\";\n\n  if (state.toString() == \"creating\") {\n    var date = dashboardItem.start_date;\n    widget_text = \"Create started \" + date.toString();\n  } else if (state.toString() == \"created\") {\n    var _date = dashboardItem.create_date;\n    widget_text = \"Created \" + _date.toString();\n  } else if (state.toString() == \"failed\") {\n    var _date2 = dashboardItem.fail_date;\n    widget_text = \"Creation failed \" + _date2.toString();\n  }\n\n  return React.createElement(\"div\", {\n    className: \"text-value\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, clusterName.toString());\n}\n\nfunction DashboardItemCol(props) {\n  var dashboardItem = props.dashboardItem;\n  var clusterName = dashboardItem.cluster_name;\n  var state = dashboardItem.state;\n  var progress = dashboardItem.progress;\n  var cardid = \"card\" + dashboardItem.id;\n  var widget_text = \"No creation info\";\n  var class_name = \"text-white bg-primary border-primary\";\n\n  if (state.toString() == \"creating\") {\n    var date = dashboardItem.start_date;\n    widget_text = \"Create started \" + date.toString();\n    class_name = \"text-white bg-primary border-primary\";\n  } else if (state.toString() == \"created\") {\n    var _date3 = dashboardItem.create_date;\n    widget_text = \"Created \" + _date3.toString();\n    class_name = \"text-white bg-success border-success\";\n  } else if (state.toString() == \"failed\") {\n    var _date4 = dashboardItem.fail_date;\n    widget_text = \"Creation failed \" + _date4.toString();\n    class_name = \"text-white bg-danger border-danger\";\n  }\n\n  var isopen = \"{this.state.\" + {\n    cardid: cardid\n  } + \"}\";\n  var toggle = \"{() => { this.setState({ \" + {\n    cardid: cardid\n  } + \": !this.state.\" + {\n    cardid: cardid\n  } + \" }); }}\";\n  return React.createElement(Col, {\n    xs: \"12\",\n    sm: \"6\",\n    lg: \"3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(Card, {\n    className: class_name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(CardBody, {\n    className: \"pb-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(ButtonGroup, {\n    className: \"float-right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(Dropdown, {\n    id: \"card1\",\n    isOpen: Dashboard.state.card1,\n    toggle: function toggle() {\n      Dashboard.setState({\n        card1: !Dashboard.state.card1\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(DropdownToggle, {\n    caret: true,\n    className: \"p-0\",\n    color: \"transparent\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"icon-settings\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  })), React.createElement(DropdownMenu, {\n    right: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(DropdownItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"Details\"), React.createElement(DropdownItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"Library Bundle\"), React.createElement(DropdownItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"Go to Ambari\")))), React.createElement(\"div\", {\n    className: \"text-value\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, clusterName.toString()), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, widget_text.toString())), React.createElement(\"div\", {\n    className: \"chart-wrapper\",\n    style: {\n      height: '20px',\n      margin: '20px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(Progress, {\n    className: \"progress-xs my-3 bg-info\",\n    color: \"white\",\n    value: progress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }))));\n}\n\nvar Dashboard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Dashboard, _Component);\n\n  function Dashboard(props) {\n    var _this;\n\n    _classCallCheck(this, Dashboard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Dashboard).call(this, props));\n\n    _this.loading = function () {\n      return React.createElement(\"div\", {\n        className: \"animated fadeIn pt-1 text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \"Loading...\");\n    };\n\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onRadioBtnClick = _this.onRadioBtnClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      dropdownOpen: false,\n      radioSelected: 2\n    };\n    return _this;\n  }\n\n  _createClass(Dashboard, [{\n    key: \"toggle\",\n    value: function toggle() {\n      this.setState({\n        dropdownOpen: !this.state.dropdownOpen\n      });\n    }\n  }, {\n    key: \"onRadioBtnClick\",\n    value: function onRadioBtnClick(radioSelected) {\n      this.setState({\n        radioSelected: radioSelected\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var dashboardItemList = dashboardData.filter(function (dashboardItem) {\n        return dashboardItem.id;\n      });\n      return React.createElement(\"div\", {\n        className: \"animated fadeIn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, dashboardItemList.map(function (dashboardItem, index) {\n        return React.createElement(Col, {\n          xs: \"12\",\n          sm: \"6\",\n          lg: \"3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159\n          },\n          __self: this\n        }, React.createElement(Card, {\n          className: DashbordClassName({\n            dashboardItem: dashboardItem\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160\n          },\n          __self: this\n        }, React.createElement(CardBody, {\n          className: \"pb-0\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161\n          },\n          __self: this\n        }, React.createElement(ButtonGroup, {\n          className: \"float-right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162\n          },\n          __self: this\n        }, React.createElement(Dropdown, {\n          id: \"card1\",\n          isOpen: _this2.state.card1,\n          toggle: function toggle() {\n            _this2.setState({\n              card1: !_this2.state.card1\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163\n          },\n          __self: this\n        }, React.createElement(DropdownToggle, {\n          caret: true,\n          className: \"p-0\",\n          color: \"transparent\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"icon-settings\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165\n          },\n          __self: this\n        })), React.createElement(DropdownMenu, {\n          right: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167\n          },\n          __self: this\n        }, React.createElement(DropdownItem, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168\n          },\n          __self: this\n        }, \"Details\"), React.createElement(DropdownItem, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169\n          },\n          __self: this\n        }, \"Library Bundle\"), React.createElement(DropdownItem, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170\n          },\n          __self: this\n        }, \"Go to Ambari\")))), React.createElement(DashboardItemOverview, {\n          key: index,\n          dashboardItem: dashboardItem,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"chart-wrapper\",\n          style: {\n            height: '20px',\n            margin: '20px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176\n          },\n          __self: this\n        }, React.createElement(Progress, {\n          className: \"progress-xs my-3 bg-info\",\n          color: \"white\",\n          value: \"10\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177\n          },\n          __self: this\n        }))));\n      })));\n    }\n  }]);\n\n  return Dashboard;\n}(Component);\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/pvidal/Documents/Playground/hackathon/react-app/frontend/src/views/Dashboard/Dashboard.js"],"names":["React","Component","lazy","Suspense","Bar","Line","Badge","Button","ButtonDropdown","ButtonGroup","ButtonToolbar","Card","CardBody","CardFooter","CardHeader","CardTitle","Col","Dropdown","DropdownItem","DropdownMenu","DropdownToggle","Progress","Row","Table","dashboardData","DashbordClassName","dashboardItem","state","class_name","toString","DashboardItemOverview","props","clusterName","cluster_name","widget_text","date","start_date","create_date","fail_date","DashboardItemCol","progress","cardid","id","isopen","toggle","Dashboard","card1","setState","height","margin","loading","bind","onRadioBtnClick","dropdownOpen","radioSelected","dashboardItemList","filter","map","index"],"mappings":"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","sourcesContent":["import React, { Component, lazy, Suspense } from 'react';\nimport { Bar, Line } from 'react-chartjs-2';\nimport {\n  Badge,\n  Button,\n  ButtonDropdown,\n  ButtonGroup,\n  ButtonToolbar,\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n  Col,\n  Dropdown,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n  Progress,\n  Row,\n  Table,\n} from 'reactstrap';\nimport dashboardData from './DashboardData'\n\n// Brand Card Chart\nfunction DashbordClassName(dashboardItem) {\n  const state = dashboardItem.state\n  var class_name = \"text-white bg-primary border-primary\"\n  \n  if(state.toString()==\"creating\"){\n    class_name = \"text-white bg-primary border-primary\"\n  } else if (state.toString()==\"created\") {\n    class_name = \"text-white bg-success border-success\"\n  } else if (state.toString()==\"failed\") {\n    class_name = \"text-white bg-danger border-danger\"\n  }\n\n  \n  return (\n    {class_name}\n  )\n}\n\nfunction DashboardItemOverview(props) {\n  const dashboardItem = props.dashboardItem\n  const clusterName = dashboardItem.cluster_name\n  const state = dashboardItem.state\n  var widget_text = \"No creation info\"\n  \n  if(state.toString()==\"creating\"){\n    const date = dashboardItem.start_date\n    widget_text = \"Create started \" + date.toString()\n  } else if (state.toString()==\"created\") {\n    const date = dashboardItem.create_date\n    widget_text = \"Created \" + date.toString()\n  } else if (state.toString()==\"failed\") {\n    const date = dashboardItem.fail_date\n    widget_text = \"Creation failed \" + date.toString()\n  }\n  \n  return (\n          <div className=\"text-value\">{clusterName.toString()}</div>\n          \n  )\n}\n\nfunction DashboardItemCol(props) {\n  const dashboardItem = props.dashboardItem\n  const clusterName = dashboardItem.cluster_name\n  const state = dashboardItem.state\n  const progress = dashboardItem.progress\n  const cardid = \"card\" + dashboardItem.id\n  var widget_text = \"No creation info\"\n  var class_name = \"text-white bg-primary border-primary\"\n  \n  if(state.toString()==\"creating\"){\n    const date = dashboardItem.start_date\n    widget_text = \"Create started \" + date.toString()\n    class_name = \"text-white bg-primary border-primary\"\n  } else if (state.toString()==\"created\") {\n    const date = dashboardItem.create_date\n    widget_text = \"Created \" + date.toString()\n    class_name = \"text-white bg-success border-success\"\n  } else if (state.toString()==\"failed\") {\n    const date = dashboardItem.fail_date\n    widget_text = \"Creation failed \" + date.toString()\n    class_name = \"text-white bg-danger border-danger\"\n  }\n\n  const isopen = \"{this.state.\" + {cardid} + \"}\" \n  const toggle = \"{() => { this.setState({ \" + {cardid} + \": !this.state.\" + {cardid} + \" }); }}\"\n  \n  return (\n    <Col xs=\"12\" sm=\"6\" lg=\"3\">\n            <Card className={class_name}>\n              <CardBody className=\"pb-0\">\n                <ButtonGroup className=\"float-right\">\n                  <Dropdown id='card1'  isOpen={Dashboard.state.card1}  toggle={() => { Dashboard.setState({card1: !Dashboard.state.card1 }); }} >\n                    <DropdownToggle caret className=\"p-0\" color=\"transparent\">\n                      <i className=\"icon-settings\"></i>\n                    </DropdownToggle>\n                    <DropdownMenu right>\n                      <DropdownItem>Details</DropdownItem>\n                      <DropdownItem>Library Bundle</DropdownItem>\n                      <DropdownItem>Go to Ambari</DropdownItem>\n                    </DropdownMenu>\n                  </Dropdown>\n                </ButtonGroup>\n                <div className=\"text-value\">{clusterName.toString()}</div>\n                <div>{widget_text.toString()}</div>\n              </CardBody>\n              <div className=\"chart-wrapper\" style={{ height: '20px', margin: '20px' }}>\n                <Progress className='progress-xs my-3 bg-info' color='white' value={progress}/>\n              </div>\n            </Card>\n          </Col>\n  )\n}\n\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.onRadioBtnClick = this.onRadioBtnClick.bind(this);\n\n    this.state = {\n      dropdownOpen: false,\n      radioSelected: 2,\n    };\n  }\n\n  toggle() {\n    this.setState({\n      dropdownOpen: !this.state.dropdownOpen,\n    });\n  }\n\n  onRadioBtnClick(radioSelected) {\n    this.setState({\n      radioSelected: radioSelected,\n    });\n  }\n\n  loading = () => <div className=\"animated fadeIn pt-1 text-center\">Loading...</div>\n  \n  render() {\n\n    const dashboardItemList = dashboardData.filter((dashboardItem) => dashboardItem.id)\n    \n   \n\n    return (\n      <div className=\"animated fadeIn\">\n        <Row>\n\n            {dashboardItemList.map((dashboardItem, index) =>\n               <Col xs=\"12\" sm=\"6\" lg=\"3\">\n               <Card className={DashbordClassName({dashboardItem})}>\n                 <CardBody className=\"pb-0\">\n                   <ButtonGroup className=\"float-right\">\n                     <Dropdown id='card1'  isOpen={this.state.card1}  toggle={() => { this.setState({card1: !this.state.card1 }); }} >\n                       <DropdownToggle caret className=\"p-0\" color=\"transparent\">\n                         <i className=\"icon-settings\"></i>\n                       </DropdownToggle>\n                       <DropdownMenu right>\n                         <DropdownItem>Details</DropdownItem>\n                         <DropdownItem>Library Bundle</DropdownItem>\n                         <DropdownItem>Go to Ambari</DropdownItem>\n                       </DropdownMenu>\n                     </Dropdown>\n                   </ButtonGroup>\n                   <DashboardItemOverview key={index} dashboardItem={dashboardItem}/>\n                 </CardBody>\n                 <div className=\"chart-wrapper\" style={{ height: '20px', margin: '20px' }}>\n                   <Progress className='progress-xs my-3 bg-info' color='white' value='10'/>\n                 </div>\n               </Card>\n             </Col>\n                      \n            )}\n            \n       \n        </Row>\n      \n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}