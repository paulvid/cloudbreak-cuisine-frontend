{"ast":null,"code":"import _classCallCheck from \"/Users/pvidal/Documents/Playground/hackathon/react-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/pvidal/Documents/Playground/hackathon/react-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/pvidal/Documents/Playground/hackathon/react-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/pvidal/Documents/Playground/hackathon/react-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/pvidal/Documents/Playground/hackathon/react-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/pvidal/Documents/Playground/hackathon/react-app/frontend/src/views/Generator/Services.js\";\nimport React, { Component } from 'react';\nimport { Card, CardBody, CardHeader, Progress, Row, Col, Button, Form, FormGroup, FormText, FormFeedback, Input, InputGroup, InputGroupAddon, InputGroupText, Label, Table } from 'reactstrap';\nimport { AppSwitch } from '@coreui/react';\nimport { throws } from 'assert';\nimport servicesData from './ServicesData';\n\nfunction ServiceCol(props) {\n  var service = props.service;\n  return (//   <Col md=\"2\">\n    //     <Card>\n    //         <CardBody>\n    //                 <img src={service.img} height=\"40px\" width=\"40px\" className=\"font-2xl mr-3 float-left\"/>\n    //                 <div  className=\"text-muted text-uppercase font-weight-bold font-xs\" align=\"center\">{service.description}</div>\n    //                 <div align=\"center\"><AppSwitch id=\"HDP\" className={'mx-1'} variant={'pill'} color={'success'} size={'sm'} /></div>\n    //         </CardBody>\n    //     </Card>\n    //    </Col>\n    React.createElement(Table, {\n      hover: true,\n      responsive: true,\n      className: \"table-outline mb-0 d-none d-sm-table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"avatar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: service.img,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }))), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, service.description), React.createElement(\"div\", {\n      className: \"small text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Some service description\")), React.createElement(\"td\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(AppSwitch, {\n      id: \"HDP\",\n      className: 'mx-1',\n      variant: 'pill',\n      color: 'success',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    })))))\n  );\n}\n\nvar Services =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Services, _Component);\n\n  function Services(props) {\n    var _this;\n\n    _classCallCheck(this, Services);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Services).call(this, props));\n\n    _this.saveAndContinue = function (e) {\n      e.preventDefault();\n\n      _this.props.nextStep();\n    };\n\n    _this.back = function (e) {\n      e.preventDefault();\n\n      _this.props.prevStep();\n    };\n\n    _this.loading = function () {\n      return React.createElement(\"div\", {\n        className: \"animated fadeIn pt-1 text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Loading...\");\n    };\n\n    _this.state = {\n      selectedServices: '',\n      servicesDependency: ''\n    };\n    return _this;\n  }\n\n  _createClass(Services, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props$values = this.props.values,\n          clusterType = _this$props$values.clusterType,\n          clusterVersion = _this$props$values.clusterVersion,\n          clusterId = _this$props$values.clusterId;\n      var serviceList = servicesData.filter(function (service) {\n        return service.id;\n      });\n      return React.createElement(\"div\", {\n        className: \"animated fadeIn align-items-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, serviceList.map(function (service, index) {\n        return React.createElement(ServiceCol, {\n          key: index,\n          service: service,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        });\n      })));\n    }\n  }]);\n\n  return Services;\n}(Component);\n\nexport default Services;","map":{"version":3,"sources":["/Users/pvidal/Documents/Playground/hackathon/react-app/frontend/src/views/Generator/Services.js"],"names":["React","Component","Card","CardBody","CardHeader","Progress","Row","Col","Button","Form","FormGroup","FormText","FormFeedback","Input","InputGroup","InputGroupAddon","InputGroupText","Label","Table","AppSwitch","throws","servicesData","ServiceCol","props","service","img","description","Services","saveAndContinue","e","preventDefault","nextStep","back","prevStep","loading","state","selectedServices","servicesDependency","values","clusterType","clusterVersion","clusterId","serviceList","filter","id","map","index"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Card, CardBody, CardHeader, Progress, Row, Col, Button, Form,\n    FormGroup,\n    FormText,\n    FormFeedback,\n    Input,\n    InputGroup,\n    InputGroupAddon,\n    InputGroupText,\n    Label,\n    Table, } from 'reactstrap';\nimport { AppSwitch } from '@coreui/react'\nimport { throws } from 'assert';\n\nimport servicesData from './ServicesData'\n\n\nfunction ServiceCol(props) {\n    const service = props.service\n    return (\n    //   <Col md=\"2\">\n  \n    //     <Card>\n    //         <CardBody>\n\n    //                 <img src={service.img} height=\"40px\" width=\"40px\" className=\"font-2xl mr-3 float-left\"/>\n    //                 <div  className=\"text-muted text-uppercase font-weight-bold font-xs\" align=\"center\">{service.description}</div>\n    //                 <div align=\"center\"><AppSwitch id=\"HDP\" className={'mx-1'} variant={'pill'} color={'success'} size={'sm'} /></div>\n\n\n                \n    //         </CardBody>\n    //     </Card>\n    //    </Col>\n            <Table hover responsive className=\"table-outline mb-0 d-none d-sm-table\">\n                  <tbody>\n                    <tr>\n                        <td className=\"text-center\">\n                        <div className=\"avatar\">\n                            <img src={service.img}/>\n                        </div>\n                        </td>\n                        <td>\n                        <div>{service.description}</div>\n                        <div className=\"small text-muted\">\n                            Some service description\n                        </div>\n                        </td>\n                        <td className=\"text-center\">\n                        <AppSwitch id=\"HDP\" className={'mx-1'} variant={'pill'} color={'success'}/>\n                        </td>\n                        </tr>\n                    </tbody>\n                </Table>\n    )\n  }\n\nclass Services extends Component{\n    constructor(props) {\n        super(props);\n    \n        this.state = {\n            selectedServices: '',\n            servicesDependency: ''\n        };\n      }\n\n    \n    saveAndContinue = (e) => {\n        e.preventDefault();\n        this.props.nextStep();\n    }\n\n    back  = (e) => {\n        e.preventDefault();\n        this.props.prevStep();\n    }\n    \n    loading = () => <div className=\"animated fadeIn pt-1 text-center\">Loading...</div>\n    \n    render(){\n        const {values: { clusterType, clusterVersion, clusterId }} = this.props;\n\n        const serviceList = servicesData.filter((service) => service.id)\n\n        return(\n\n            <div className=\"animated fadeIn align-items-center\">\n                <Row>\n                    {serviceList.map((service, index) =>\n                      <ServiceCol key={index} service={service}/>\n                    )}\n                </Row>\n             </div>\n        )\n    }\n}\n\nexport default Services;"]},"metadata":{},"sourceType":"module"}