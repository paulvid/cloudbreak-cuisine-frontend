{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nvar propTypes = {\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  children: PropTypes.node,\n  className: PropTypes.string,\n  brand: PropTypes.any,\n  full: PropTypes.any,\n  minimized: PropTypes.any\n};\nvar defaultProps = {\n  tag: 'a'\n};\n\nvar AppNavbarBrand = function (_Component) {\n  _inherits(AppNavbarBrand, _Component);\n\n  function AppNavbarBrand() {\n    _classCallCheck(this, AppNavbarBrand);\n\n    return _possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  AppNavbarBrand.prototype.imgSrc = function imgSrc(brand) {\n    return brand.src ? brand.src : '';\n  };\n\n  AppNavbarBrand.prototype.imgWidth = function imgWidth(brand) {\n    return brand.width ? brand.width : 'auto';\n  };\n\n  AppNavbarBrand.prototype.imgHeight = function imgHeight(brand) {\n    return brand.height ? brand.height : 'auto';\n  };\n\n  AppNavbarBrand.prototype.imgAlt = function imgAlt(brand) {\n    return brand.alt ? brand.alt : '';\n  };\n\n  AppNavbarBrand.prototype.navbarBrandImg = function navbarBrandImg(props, classBrand, key) {\n    return React.createElement('img', {\n      src: this.imgSrc(props),\n      width: this.imgWidth(props),\n      height: this.imgHeight(props),\n      alt: this.imgAlt(props),\n      className: classBrand,\n      key: key.toString()\n    });\n  };\n\n  AppNavbarBrand.prototype.render = function render() {\n    var _props = this.props,\n        className = _props.className,\n        children = _props.children,\n        Tag = _props.tag,\n        attributes = _objectWithoutProperties(_props, ['className', 'children', 'tag']);\n\n    var classes = classNames(className, 'navbar-brand');\n    var img = [];\n\n    if (this.props.brand) {\n      var props = this.props.brand;\n      var classBrand = 'navbar-brand';\n      img.push(this.navbarBrandImg(props, classBrand, img.length + 1));\n    }\n\n    if (this.props.full) {\n      var _props2 = this.props.full;\n      var _classBrand = 'navbar-brand-full';\n      img.push(this.navbarBrandImg(_props2, _classBrand, img.length + 1));\n    }\n\n    if (this.props.minimized) {\n      var _props3 = this.props.minimized;\n      var _classBrand2 = 'navbar-brand-minimized';\n      img.push(this.navbarBrandImg(_props3, _classBrand2, img.length + 1));\n    }\n\n    return React.createElement(Tag, _extends({}, attributes, {\n      className: classes\n    }), children || img);\n  };\n\n  return AppNavbarBrand;\n}(Component);\n\nAppNavbarBrand.propTypes = process.env.NODE_ENV !== \"production\" ? propTypes : {};\nAppNavbarBrand.defaultProps = defaultProps;\nexport default AppNavbarBrand;","map":null,"metadata":{},"sourceType":"module"}