{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { sidebarCssClasses } from './Shared';\nimport ClickOutHandler from 'react-onclickout';\nimport './Shared/element-closest';\nvar propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  compact: PropTypes.bool,\n  display: PropTypes.string,\n  fixed: PropTypes.bool,\n  minimized: PropTypes.bool,\n  isOpen: PropTypes.bool,\n  offCanvas: PropTypes.bool,\n  staticContext: PropTypes.any,\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string])\n};\nvar defaultProps = {\n  tag: 'div',\n  compact: false,\n  display: '',\n  fixed: false,\n  minimized: false,\n  isOpen: false,\n  offCanvas: false\n};\n\nvar AppSidebar = function (_Component) {\n  _inherits(AppSidebar, _Component);\n\n  function AppSidebar(props) {\n    _classCallCheck(this, AppSidebar);\n\n    var _this = _possibleConstructorReturn(this, _Component.call(this, props));\n\n    _this.isCompact = _this.isCompact.bind(_this);\n    _this.isFixed = _this.isFixed.bind(_this);\n    _this.isMinimized = _this.isMinimized.bind(_this);\n    _this.isOffCanvas = _this.isOffCanvas.bind(_this);\n    _this.displayBreakpoint = _this.displayBreakpoint.bind(_this);\n    _this.hideMobile = _this.hideMobile.bind(_this);\n    return _this;\n  }\n\n  AppSidebar.prototype.componentDidMount = function componentDidMount() {\n    this.displayBreakpoint(this.props.display);\n    this.isCompact(this.props.compact);\n    this.isFixed(this.props.fixed);\n    this.isMinimized(this.props.minimized);\n    this.isOffCanvas(this.props.offCanvas);\n  };\n\n  AppSidebar.prototype.isCompact = function isCompact(compact) {\n    if (compact) {\n      document.body.classList.add('sidebar-compact');\n    }\n  };\n\n  AppSidebar.prototype.isFixed = function isFixed(fixed) {\n    if (fixed) {\n      document.body.classList.add('sidebar-fixed');\n    }\n  };\n\n  AppSidebar.prototype.isMinimized = function isMinimized(minimized) {\n    if (minimized) {\n      document.body.classList.add('sidebar-minimized');\n    }\n  };\n\n  AppSidebar.prototype.isOffCanvas = function isOffCanvas(offCanvas) {\n    if (offCanvas) {\n      document.body.classList.add('sidebar-off-canvas');\n    }\n  };\n\n  AppSidebar.prototype.displayBreakpoint = function displayBreakpoint(display) {\n    var cssTemplate = 'sidebar-' + display + '-show';\n    var _sidebarCssClasses$ = sidebarCssClasses[0],\n        cssClass = _sidebarCssClasses$[0];\n\n    if (display && sidebarCssClasses.indexOf(cssTemplate) > -1) {\n      cssClass = cssTemplate;\n    }\n\n    document.body.classList.add(cssClass);\n  };\n\n  AppSidebar.prototype.hideMobile = function hideMobile() {\n    if (document.body.classList.contains('sidebar-show')) {\n      document.body.classList.remove('sidebar-show');\n    }\n  };\n\n  AppSidebar.prototype.onClickOut = function onClickOut(e) {\n    if (typeof window !== 'undefined' && document.body.classList.contains('sidebar-show')) {\n      if (!e.target.closest('[data-sidebar-toggler]')) {\n        this.hideMobile();\n      }\n    }\n  };\n\n  AppSidebar.prototype.render = function render() {\n    var _this2 = this;\n\n    var _props = this.props,\n        className = _props.className,\n        children = _props.children,\n        Tag = _props.tag,\n        attributes = _objectWithoutProperties(_props, ['className', 'children', 'tag']);\n\n    delete attributes.compact;\n    delete attributes.display;\n    delete attributes.fixed;\n    delete attributes.minimized;\n    delete attributes.offCanvas;\n    delete attributes.isOpen;\n    delete attributes.staticContext;\n    var classes = classNames(className, 'sidebar'); // sidebar-nav root\n\n    return React.createElement(ClickOutHandler, {\n      onClickOut: function onClickOut(e) {\n        _this2.onClickOut(e);\n      }\n    }, React.createElement(Tag, _extends({\n      className: classes\n    }, attributes), children));\n  };\n\n  return AppSidebar;\n}(Component);\n\nAppSidebar.propTypes = process.env.NODE_ENV !== \"production\" ? propTypes : {};\nAppSidebar.defaultProps = defaultProps;\nexport default AppSidebar;","map":null,"metadata":{},"sourceType":"module"}